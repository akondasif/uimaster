/*
 *
 * This file is automatically generated on Thu Jun 04 22:37:13 CST 2015
 */

    
package org.shaolin.bmdp.coordinator.be;
        
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;

import org.shaolin.bmdp.datamodel.bediagram.*;
import org.shaolin.bmdp.datamodel.common.*;
import org.shaolin.bmdp.runtime.be.IBusinessEntity;
import org.shaolin.bmdp.runtime.be.IExtensibleEntity;
import org.shaolin.bmdp.runtime.be.IPersistentEntity;
import org.shaolin.bmdp.runtime.be.IHistoryEntity;
import org.shaolin.bmdp.runtime.be.BEExtensionInfo;

import org.shaolin.bmdp.runtime.spi.IConstantService;

import org.shaolin.bmdp.runtime.AppContext;

import org.shaolin.bmdp.runtime.ce.CEUtil;

import org.shaolin.bmdp.coordinator.ce.*;


/**
 * null
 * 
 * This code is generated automatically, any change will be replaced after rebuild.
 * 
 *
 */

public class TaskImpl  implements org.shaolin.bmdp.coordinator.be.ITask
{
    private static final long serialVersionUID = 0x90B1123CE87B50FFL;

    private final IConstantService ceService = AppContext.get().getConstantService();

    protected String getBusinessEntityName()
    {
        return "org.shaolin.bmdp.coordinator.be.Task";
    }

    public TaskImpl()
    {
        
        _extField = new BEExtensionInfo();
        
    }
    
    
        /**
     * Enable record
     */
    private boolean _enable = true;


    /**
     *  BEExtension _extType
     */
    protected String _extType;

    /**
     *  BEExtension _extField
     */
    protected BEExtensionInfo _extField;
        
   /**
     *  help is not available
     */    
    protected long id;
    
   /**
     *  help is not available
     */    
    protected long partyId;
    
   /**
     *  help is not available
     */    
    protected java.lang.String subject;
    
   /**
     *  help is not available
     */    
    protected java.lang.String description;
    
   /**
     *  help is not available
     */    
    protected java.util.Date triggerTime;
    
   /**
     *  help is not available
     */    
    protected java.util.Date triggerTimeStart;
    
   /**
     *  help is not available
     */    
    protected java.util.Date triggerTimeEnd;
    
   /**
     *  help is not available
     */    
    protected boolean sendSMS;
    
   /**
     *  help is not available
     */    
    protected boolean sendEmail;
    
   /**
     *  help is not available
     */    
    protected TaskStatusType status = TaskStatusType.NOT_SPECIFIED;
    
    protected int statusInt = TaskStatusType.NOT_SPECIFIED.getIntValue();
    
   /**
     *  help is not available
     */    
    protected int completeRate;
    
   /**
     *  help is not available
     */    
    protected TaskPriorityType priority = TaskPriorityType.NOT_SPECIFIED;
    
    protected int priorityInt = TaskPriorityType.NOT_SPECIFIED.getIntValue();
    
        /**
     *  Is enable
     *
     *  @return boolean
     */
    public boolean isEnabled() {
        return _enable;
    }
            /**
     *  Is enable
     *
     *  @return boolean
     */
    private boolean get_enable() {
        return _enable;
    }
        
    /**
     *  get _extType
     *
     *  @return _extType
     */
    public String get_extType() {
        return _extType;
    }

    /**
     *  get _extField
     *
     *  @return _extField
     */
    public BEExtensionInfo get_extField() {
        return _extField;
    }
        
    /**
     *  get id
     *
     *  @return id
     */
    public long getId() {
        return id;
    }

    /**
     *  get partyId
     *
     *  @return partyId
     */
    public long getPartyId() {
        return partyId;
    }

    /**
     *  get subject
     *
     *  @return subject
     */
    public java.lang.String getSubject() {
        return subject;
    }

    /**
     *  get description
     *
     *  @return description
     */
    public java.lang.String getDescription() {
        return description;
    }

    /**
     *  get triggerTime
     *
     *  @return triggerTime
     */
    public java.util.Date getTriggerTime() {
        return triggerTime;
    }

    /**
     *  get triggerTimeStart
     *
     *  @return triggerTimeStart
     */
    public java.util.Date getTriggerTimeStart() {
        return triggerTimeStart;
    }

    /**
     *  get triggerTimeEnd
     *
     *  @return triggerTimeEnd
     */
    public java.util.Date getTriggerTimeEnd() {
        return triggerTimeEnd;
    }

    /**
     *  get sendSMS
     *
     *  @return sendSMS
     */
    public boolean getSendSMS() {
        return sendSMS;
    }

    /**
     *  get sendEmail
     *
     *  @return sendEmail
     */
    public boolean getSendEmail() {
        return sendEmail;
    }

    /**
     *  get status
     *
     *  @return status
     */
    public TaskStatusType getStatus() {
        return status;
    }

    /**
     *  get statusInt
     *
     *  @return statusInt
     */
    private int getStatusInt() {
        return statusInt;
    }

    /**
     *  get completeRate
     *
     *  @return completeRate
     */
    public int getCompleteRate() {
        return completeRate;
    }

    /**
     *  get priority
     *
     *  @return priority
     */
    public TaskPriorityType getPriority() {
        return priority;
    }

    /**
     *  get priorityInt
     *
     *  @return priorityInt
     */
    private int getPriorityInt() {
        return priorityInt;
    }

        /**
     *  set enable
     *  @parameter true or false.
     */
    public void setEnabled(boolean enable) {
        _enable = enable;
    }

        /**
     *  set enable
     *  @parameter true or false.
     */
    private void set_enable(boolean enable) {
        _enable = enable;
    }

    /**
     *  set _extType
     *  @param _extType which is the extension type of be object.
     */
    public void set_extType(java.lang.String _extType) {
        this._extType = _extType;
    }
        
    /**
     *  set id
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     *  set partyId
     */
    public void setPartyId(long partyId) {
        this.partyId = partyId;
    }

    /**
     *  set subject
     */
    public void setSubject(java.lang.String subject) {
        this.subject = subject;
    }

    /**
     *  set description
     */
    public void setDescription(java.lang.String description) {
        this.description = description;
    }

    /**
     *  set triggerTime
     */
    public void setTriggerTime(java.util.Date triggerTime) {
        this.triggerTime = triggerTime;
    }

    /**
     *  set triggerTimeStart
     */
    public void setTriggerTimeStart(java.util.Date triggerTimeStart) {
        this.triggerTimeStart = triggerTimeStart;
    }

    /**
     *  set triggerTimeEnd
     */
    public void setTriggerTimeEnd(java.util.Date triggerTimeEnd) {
        this.triggerTimeEnd = triggerTimeEnd;
    }

    /**
     *  set sendSMS
     */
    public void setSendSMS(boolean sendSMS) {
        this.sendSMS = sendSMS;
    }

    /**
     *  set sendEmail
     */
    public void setSendEmail(boolean sendEmail) {
        this.sendEmail = sendEmail;
    }

    /**
     *  set status
     */
    public void setStatus(TaskStatusType status) {
        this.status = status;
    if (statusInt != status.getIntValue()) {
            statusInt = status.getIntValue();
        }
    }

    /**
     *  set int status
     */
    private void setStatusInt(int intValue) {
        this.statusInt = intValue;
        if (statusInt != status.getIntValue()) {
            status = (TaskStatusType)ceService.getConstantEntity(TaskStatusType.ENTITY_NAME).getByIntValue(statusInt);
        }
    }

    /**
     *  set completeRate
     */
    public void setCompleteRate(int completeRate) {
        this.completeRate = completeRate;
    }

    /**
     *  set priority
     */
    public void setPriority(TaskPriorityType priority) {
        this.priority = priority;
    if (priorityInt != priority.getIntValue()) {
            priorityInt = priority.getIntValue();
        }
    }

    /**
     *  set int priority
     */
    private void setPriorityInt(int intValue) {
        this.priorityInt = intValue;
        if (priorityInt != priority.getIntValue()) {
            priority = (TaskPriorityType)ceService.getConstantEntity(TaskPriorityType.ENTITY_NAME).getByIntValue(priorityInt);
        }
    }

    
    /**
     * Check different according to primary key.
     */
    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof org.shaolin.bmdp.coordinator.be.TaskImpl))
            return false;
        org.shaolin.bmdp.coordinator.be.TaskImpl o = (org.shaolin.bmdp.coordinator.be.TaskImpl)obj;
        
        boolean result = super.equals(obj);

        boolean eq = true;
        
        return result;
    }

    /**
     * Generate hashCode according to primary key.
     */
    public int hashCode() {
        
        int result = super.hashCode();

        return result;
    }
        
    
     /**
     * Gets the String format of the business entity.
     *
     * @return String the business entity in String format.
     */
    public  String  toString() {
        StringBuffer aBuf = new StringBuffer();
        aBuf.append("org.shaolin.bmdp.coordinator.be.Task");
    
        aBuf.append(" : ");
        
        aBuf.append("enable=").append(_enable).append(", ");
        
        aBuf.append("id");
        aBuf.append("=");
        aBuf.append(id);
        aBuf.append(", ");
        
        aBuf.append("partyId");
        aBuf.append("=");
        aBuf.append(partyId);
        aBuf.append(", ");
        
        aBuf.append("subject");
        aBuf.append("=");
        aBuf.append(subject);
        aBuf.append(", ");
        
        aBuf.append("description");
        aBuf.append("=");
        aBuf.append(description);
        aBuf.append(", ");
        
        aBuf.append("triggerTime");
        aBuf.append("=");
        aBuf.append(triggerTime);
        aBuf.append(", ");
        
        aBuf.append("triggerTimeStart");
        aBuf.append("=");
        aBuf.append(triggerTimeStart);
        aBuf.append(", ");
        
        aBuf.append("triggerTimeEnd");
        aBuf.append("=");
        aBuf.append(triggerTimeEnd);
        aBuf.append(", ");
        
        aBuf.append("sendSMS");
        aBuf.append("=");
        aBuf.append(sendSMS);
        aBuf.append(", ");
        
        aBuf.append("sendEmail");
        aBuf.append("=");
        aBuf.append(sendEmail);
        aBuf.append(", ");
        
        aBuf.append("status");
        aBuf.append("=");
        aBuf.append(status);
        aBuf.append(", ");
        
        aBuf.append("completeRate");
        aBuf.append("=");
        aBuf.append(completeRate);
        aBuf.append(", ");
        
        aBuf.append("priority");
        aBuf.append("=");
        aBuf.append(priority);
        aBuf.append(", ");
        
        return aBuf.toString();
    }
    
    
     /**
     * Gets list of MemberType.
     *
     * @return List     the list of MemberType.
     */
    public List<MemberType> getMemberList() {
        List<MemberType> memberTypeList = new ArrayList<MemberType>();
        
        MemberType member = null;
        
        org.shaolin.bmdp.datamodel.bediagram.LongType idBEType = new org.shaolin.bmdp.datamodel.bediagram.LongType();
    
        //MemberType Define for id
        member = new MemberType();
        member.setName("id");
        member.setDescription("null");
        member.setType(idBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.LongType partyIdBEType = new org.shaolin.bmdp.datamodel.bediagram.LongType();
    
        //MemberType Define for partyId
        member = new MemberType();
        member.setName("partyId");
        member.setDescription("null");
        member.setType(partyIdBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType subjectBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for subject
        member = new MemberType();
        member.setName("subject");
        member.setDescription("null");
        member.setType(subjectBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType descriptionBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for description
        member = new MemberType();
        member.setName("description");
        member.setDescription("null");
        member.setType(descriptionBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType triggerTimeBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for triggerTime
        member = new MemberType();
        member.setName("triggerTime");
        member.setDescription("null");
        member.setType(triggerTimeBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType triggerTimeStartBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for triggerTimeStart
        member = new MemberType();
        member.setName("triggerTimeStart");
        member.setDescription("null");
        member.setType(triggerTimeStartBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType triggerTimeEndBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for triggerTimeEnd
        member = new MemberType();
        member.setName("triggerTimeEnd");
        member.setDescription("null");
        member.setType(triggerTimeEndBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.BooleanType sendSMSBEType = new org.shaolin.bmdp.datamodel.bediagram.BooleanType();
    
        //MemberType Define for sendSMS
        member = new MemberType();
        member.setName("sendSMS");
        member.setDescription("null");
        member.setType(sendSMSBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.BooleanType sendEmailBEType = new org.shaolin.bmdp.datamodel.bediagram.BooleanType();
    
        //MemberType Define for sendEmail
        member = new MemberType();
        member.setName("sendEmail");
        member.setDescription("null");
        member.setType(sendEmailBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.CEObjRefType statusBEType = new org.shaolin.bmdp.datamodel.bediagram.CEObjRefType();
    
        TargetEntityType statusTargetEntity = new TargetEntityType();
        statusBEType.setTargetEntity(statusTargetEntity);
        statusTargetEntity.setEntityName("org.shaolin.bmdp.coordinator.ce.TaskStatusType");
            
        //MemberType Define for status
        member = new MemberType();
        member.setName("status");
        member.setDescription("null");
        member.setType(statusBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.IntType completeRateBEType = new org.shaolin.bmdp.datamodel.bediagram.IntType();
    
        //MemberType Define for completeRate
        member = new MemberType();
        member.setName("completeRate");
        member.setDescription("null");
        member.setType(completeRateBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.CEObjRefType priorityBEType = new org.shaolin.bmdp.datamodel.bediagram.CEObjRefType();
    
        TargetEntityType priorityTargetEntity = new TargetEntityType();
        priorityBEType.setTargetEntity(priorityTargetEntity);
        priorityTargetEntity.setEntityName("org.shaolin.bmdp.coordinator.ce.TaskPriorityType");
            
        //MemberType Define for priority
        member = new MemberType();
        member.setName("priority");
        member.setDescription("null");
        member.setType(priorityBEType);
        memberTypeList.add(member);
            
        return memberTypeList;
    }
    
    public ITask createEntity ()
    {
        return new TaskImpl();
    }
    
}

        

