//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.28 at 04:10:22 PM CST 
//


package org.shaolin.bmdp.designtime.andriod.datamodel;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ViewGroup_QNAME = new QName("", "ViewGroup");
    private final static QName _TextureView_QNAME = new QName("", "TextureView");
    private final static QName _AdapterViewAnimator_QNAME = new QName("", "AdapterViewAnimator");
    private final static QName _ListView_QNAME = new QName("", "ListView");
    private final static QName _View_QNAME = new QName("", "View");
    private final static QName _Button_QNAME = new QName("", "Button");
    private final static QName _SurfaceView_QNAME = new QName("", "SurfaceView");
    private final static QName _FrameLayout_QNAME = new QName("", "FrameLayout");
    private final static QName _ImageButton_QNAME = new QName("", "ImageButton");
    private final static QName _RelativeLayout_QNAME = new QName("", "RelativeLayout");
    private final static QName _AutoCompleteTextView_QNAME = new QName("", "AutoCompleteTextView");
    private final static QName _AbsSpinner_QNAME = new QName("", "AbsSpinner");
    private final static QName _ViewSwitcher_QNAME = new QName("", "ViewSwitcher");
    private final static QName _LinearLayout_QNAME = new QName("", "LinearLayout");
    private final static QName _EditText_QNAME = new QName("", "EditText");
    private final static QName _ViewAnimator_QNAME = new QName("", "ViewAnimator");
    private final static QName _TextView_QNAME = new QName("", "TextView");
    private final static QName _AbsListView_QNAME = new QName("", "AbsListView");
    private final static QName _AbsoluteLayout_QNAME = new QName("", "AbsoluteLayout");
    private final static QName _AbsSeekBar_QNAME = new QName("", "AbsSeekBar");
    private final static QName _AdapterView_QNAME = new QName("", "AdapterView");
    private final static QName _CompoundButton_QNAME = new QName("", "CompoundButton");
    private final static QName _ImageView_QNAME = new QName("", "ImageView");
    private final static QName _ProgressBar_QNAME = new QName("", "ProgressBar");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link AdapterViewFlipper }
     * 
     */
    public AdapterViewFlipper createAdapterViewFlipper() {
        return new AdapterViewFlipper();
    }

    /**
     * Create an instance of {@link AdapterViewAnimator }
     * 
     */
    public AdapterViewAnimator createAdapterViewAnimator() {
        return new AdapterViewAnimator();
    }

    /**
     * Create an instance of {@link AdapterView }
     * 
     */
    public AdapterView createAdapterView() {
        return new AdapterView();
    }

    /**
     * Create an instance of {@link ViewGroup }
     * 
     */
    public ViewGroup createViewGroup() {
        return new ViewGroup();
    }

    /**
     * Create an instance of {@link View }
     * 
     */
    public View createView() {
        return new View();
    }

    /**
     * Create an instance of {@link GLSurfaceView }
     * 
     */
    public GLSurfaceView createGLSurfaceView() {
        return new GLSurfaceView();
    }

    /**
     * Create an instance of {@link SurfaceView }
     * 
     */
    public SurfaceView createSurfaceView() {
        return new SurfaceView();
    }

    /**
     * Create an instance of {@link AutoCompleteTextView }
     * 
     */
    public AutoCompleteTextView createAutoCompleteTextView() {
        return new AutoCompleteTextView();
    }

    /**
     * Create an instance of {@link MediaController }
     * 
     */
    public MediaController createMediaController() {
        return new MediaController();
    }

    /**
     * Create an instance of {@link FrameLayout }
     * 
     */
    public FrameLayout createFrameLayout() {
        return new FrameLayout();
    }

    /**
     * Create an instance of {@link TextView }
     * 
     */
    public TextView createTextView() {
        return new TextView();
    }

    /**
     * Create an instance of {@link FragmentBreadCrumbs }
     * 
     */
    public FragmentBreadCrumbs createFragmentBreadCrumbs() {
        return new FragmentBreadCrumbs();
    }

    /**
     * Create an instance of {@link AppWidgetHostView }
     * 
     */
    public AppWidgetHostView createAppWidgetHostView() {
        return new AppWidgetHostView();
    }

    /**
     * Create an instance of {@link GestureOverlayView }
     * 
     */
    public GestureOverlayView createGestureOverlayView() {
        return new GestureOverlayView();
    }

    /**
     * Create an instance of {@link ExtractEditText }
     * 
     */
    public ExtractEditText createExtractEditText() {
        return new ExtractEditText();
    }

    /**
     * Create an instance of {@link EditText }
     * 
     */
    public EditText createEditText() {
        return new EditText();
    }

    /**
     * Create an instance of {@link KeyboardView }
     * 
     */
    public KeyboardView createKeyboardView() {
        return new KeyboardView();
    }

    /**
     * Create an instance of {@link RSSurfaceView }
     * 
     */
    public RSSurfaceView createRSSurfaceView() {
        return new RSSurfaceView();
    }

    /**
     * Create an instance of {@link RSTextureView }
     * 
     */
    public RSTextureView createRSTextureView() {
        return new RSTextureView();
    }

    /**
     * Create an instance of {@link TextureView }
     * 
     */
    public TextureView createTextureView() {
        return new TextureView();
    }

    /**
     * Create an instance of {@link ViewStub }
     * 
     */
    public ViewStub createViewStub() {
        return new ViewStub();
    }

    /**
     * Create an instance of {@link WebView }
     * 
     */
    public WebView createWebView() {
        return new WebView();
    }

    /**
     * Create an instance of {@link AbsoluteLayout }
     * 
     */
    public AbsoluteLayout createAbsoluteLayout() {
        return new AbsoluteLayout();
    }

    /**
     * Create an instance of {@link AbsListView }
     * 
     */
    public AbsListView createAbsListView() {
        return new AbsListView();
    }

    /**
     * Create an instance of {@link AbsSeekBar }
     * 
     */
    public AbsSeekBar createAbsSeekBar() {
        return new AbsSeekBar();
    }

    /**
     * Create an instance of {@link AbsSpinner }
     * 
     */
    public AbsSpinner createAbsSpinner() {
        return new AbsSpinner();
    }

    /**
     * Create an instance of {@link AnalogClock }
     * 
     */
    public AnalogClock createAnalogClock() {
        return new AnalogClock();
    }

    /**
     * Create an instance of {@link Button }
     * 
     */
    public Button createButton() {
        return new Button();
    }

    /**
     * Create an instance of {@link CalendarView }
     * 
     */
    public CalendarView createCalendarView() {
        return new CalendarView();
    }

    /**
     * Create an instance of {@link CheckBox }
     * 
     */
    public CheckBox createCheckBox() {
        return new CheckBox();
    }

    /**
     * Create an instance of {@link CompoundButton }
     * 
     */
    public CompoundButton createCompoundButton() {
        return new CompoundButton();
    }

    /**
     * Create an instance of {@link CheckedTextView }
     * 
     */
    public CheckedTextView createCheckedTextView() {
        return new CheckedTextView();
    }

    /**
     * Create an instance of {@link Chronometer }
     * 
     */
    public Chronometer createChronometer() {
        return new Chronometer();
    }

    /**
     * Create an instance of {@link DatePicker }
     * 
     */
    public DatePicker createDatePicker() {
        return new DatePicker();
    }

    /**
     * Create an instance of {@link DialerFilter }
     * 
     */
    public DialerFilter createDialerFilter() {
        return new DialerFilter();
    }

    /**
     * Create an instance of {@link RelativeLayout }
     * 
     */
    public RelativeLayout createRelativeLayout() {
        return new RelativeLayout();
    }

    /**
     * Create an instance of {@link DigitalClock }
     * 
     */
    public DigitalClock createDigitalClock() {
        return new DigitalClock();
    }

    /**
     * Create an instance of {@link ExpandableListView }
     * 
     */
    public ExpandableListView createExpandableListView() {
        return new ExpandableListView();
    }

    /**
     * Create an instance of {@link ListView }
     * 
     */
    public ListView createListView() {
        return new ListView();
    }

    /**
     * Create an instance of {@link Gallery }
     * 
     */
    public Gallery createGallery() {
        return new Gallery();
    }

    /**
     * Create an instance of {@link GridLayout }
     * 
     */
    public GridLayout createGridLayout() {
        return new GridLayout();
    }

    /**
     * Create an instance of {@link GridView }
     * 
     */
    public GridView createGridView() {
        return new GridView();
    }

    /**
     * Create an instance of {@link HorizontalScrollView }
     * 
     */
    public HorizontalScrollView createHorizontalScrollView() {
        return new HorizontalScrollView();
    }

    /**
     * Create an instance of {@link ImageButton }
     * 
     */
    public ImageButton createImageButton() {
        return new ImageButton();
    }

    /**
     * Create an instance of {@link ImageSwitcher }
     * 
     */
    public ImageSwitcher createImageSwitcher() {
        return new ImageSwitcher();
    }

    /**
     * Create an instance of {@link ViewSwitcher }
     * 
     */
    public ViewSwitcher createViewSwitcher() {
        return new ViewSwitcher();
    }

    /**
     * Create an instance of {@link ViewAnimator }
     * 
     */
    public ViewAnimator createViewAnimator() {
        return new ViewAnimator();
    }

    /**
     * Create an instance of {@link ImageView }
     * 
     */
    public ImageView createImageView() {
        return new ImageView();
    }

    /**
     * Create an instance of {@link LinearLayout }
     * 
     */
    public LinearLayout createLinearLayout() {
        return new LinearLayout();
    }

    /**
     * Create an instance of {@link MultiAutoCompleteTextView }
     * 
     */
    public MultiAutoCompleteTextView createMultiAutoCompleteTextView() {
        return new MultiAutoCompleteTextView();
    }

    /**
     * Create an instance of {@link NumberPicker }
     * 
     */
    public NumberPicker createNumberPicker() {
        return new NumberPicker();
    }

    /**
     * Create an instance of {@link ProgressBar }
     * 
     */
    public ProgressBar createProgressBar() {
        return new ProgressBar();
    }

    /**
     * Create an instance of {@link QuickContactBadge }
     * 
     */
    public QuickContactBadge createQuickContactBadge() {
        return new QuickContactBadge();
    }

    /**
     * Create an instance of {@link RadioButton }
     * 
     */
    public RadioButton createRadioButton() {
        return new RadioButton();
    }

    /**
     * Create an instance of {@link RadioGroup }
     * 
     */
    public RadioGroup createRadioGroup() {
        return new RadioGroup();
    }

    /**
     * Create an instance of {@link RatingBar }
     * 
     */
    public RatingBar createRatingBar() {
        return new RatingBar();
    }

    /**
     * Create an instance of {@link ScrollView }
     * 
     */
    public ScrollView createScrollView() {
        return new ScrollView();
    }

    /**
     * Create an instance of {@link SearchView }
     * 
     */
    public SearchView createSearchView() {
        return new SearchView();
    }

    /**
     * Create an instance of {@link SeekBar }
     * 
     */
    public SeekBar createSeekBar() {
        return new SeekBar();
    }

    /**
     * Create an instance of {@link SlidingDrawer }
     * 
     */
    public SlidingDrawer createSlidingDrawer() {
        return new SlidingDrawer();
    }

    /**
     * Create an instance of {@link Space }
     * 
     */
    public Space createSpace() {
        return new Space();
    }

    /**
     * Create an instance of {@link Spinner }
     * 
     */
    public Spinner createSpinner() {
        return new Spinner();
    }

    /**
     * Create an instance of {@link StackView }
     * 
     */
    public StackView createStackView() {
        return new StackView();
    }

    /**
     * Create an instance of {@link Switch }
     * 
     */
    public Switch createSwitch() {
        return new Switch();
    }

    /**
     * Create an instance of {@link TabHost }
     * 
     */
    public TabHost createTabHost() {
        return new TabHost();
    }

    /**
     * Create an instance of {@link TabWidget }
     * 
     */
    public TabWidget createTabWidget() {
        return new TabWidget();
    }

    /**
     * Create an instance of {@link TableLayout }
     * 
     */
    public TableLayout createTableLayout() {
        return new TableLayout();
    }

    /**
     * Create an instance of {@link TableRow }
     * 
     */
    public TableRow createTableRow() {
        return new TableRow();
    }

    /**
     * Create an instance of {@link TextSwitcher }
     * 
     */
    public TextSwitcher createTextSwitcher() {
        return new TextSwitcher();
    }

    /**
     * Create an instance of {@link TimePicker }
     * 
     */
    public TimePicker createTimePicker() {
        return new TimePicker();
    }

    /**
     * Create an instance of {@link ToggleButton }
     * 
     */
    public ToggleButton createToggleButton() {
        return new ToggleButton();
    }

    /**
     * Create an instance of {@link TwoLineListItem }
     * 
     */
    public TwoLineListItem createTwoLineListItem() {
        return new TwoLineListItem();
    }

    /**
     * Create an instance of {@link VideoView }
     * 
     */
    public VideoView createVideoView() {
        return new VideoView();
    }

    /**
     * Create an instance of {@link ViewFlipper }
     * 
     */
    public ViewFlipper createViewFlipper() {
        return new ViewFlipper();
    }

    /**
     * Create an instance of {@link ZoomButton }
     * 
     */
    public ZoomButton createZoomButton() {
        return new ZoomButton();
    }

    /**
     * Create an instance of {@link ZoomControls }
     * 
     */
    public ZoomControls createZoomControls() {
        return new ZoomControls();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ViewGroup }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ViewGroup")
    public JAXBElement<ViewGroup> createViewGroup(ViewGroup value) {
        return new JAXBElement<ViewGroup>(_ViewGroup_QNAME, ViewGroup.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TextureView }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TextureView")
    public JAXBElement<TextureView> createTextureView(TextureView value) {
        return new JAXBElement<TextureView>(_TextureView_QNAME, TextureView.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdapterViewAnimator }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AdapterViewAnimator")
    public JAXBElement<AdapterViewAnimator> createAdapterViewAnimator(AdapterViewAnimator value) {
        return new JAXBElement<AdapterViewAnimator>(_AdapterViewAnimator_QNAME, AdapterViewAnimator.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ListView }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ListView")
    public JAXBElement<ListView> createListView(ListView value) {
        return new JAXBElement<ListView>(_ListView_QNAME, ListView.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link View }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "View")
    public JAXBElement<View> createView(View value) {
        return new JAXBElement<View>(_View_QNAME, View.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Button }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Button")
    public JAXBElement<Button> createButton(Button value) {
        return new JAXBElement<Button>(_Button_QNAME, Button.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SurfaceView }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SurfaceView")
    public JAXBElement<SurfaceView> createSurfaceView(SurfaceView value) {
        return new JAXBElement<SurfaceView>(_SurfaceView_QNAME, SurfaceView.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FrameLayout }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FrameLayout")
    public JAXBElement<FrameLayout> createFrameLayout(FrameLayout value) {
        return new JAXBElement<FrameLayout>(_FrameLayout_QNAME, FrameLayout.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ImageButton }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ImageButton")
    public JAXBElement<ImageButton> createImageButton(ImageButton value) {
        return new JAXBElement<ImageButton>(_ImageButton_QNAME, ImageButton.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelativeLayout }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RelativeLayout")
    public JAXBElement<RelativeLayout> createRelativeLayout(RelativeLayout value) {
        return new JAXBElement<RelativeLayout>(_RelativeLayout_QNAME, RelativeLayout.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AutoCompleteTextView }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AutoCompleteTextView")
    public JAXBElement<AutoCompleteTextView> createAutoCompleteTextView(AutoCompleteTextView value) {
        return new JAXBElement<AutoCompleteTextView>(_AutoCompleteTextView_QNAME, AutoCompleteTextView.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbsSpinner }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AbsSpinner")
    public JAXBElement<AbsSpinner> createAbsSpinner(AbsSpinner value) {
        return new JAXBElement<AbsSpinner>(_AbsSpinner_QNAME, AbsSpinner.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ViewSwitcher }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ViewSwitcher")
    public JAXBElement<ViewSwitcher> createViewSwitcher(ViewSwitcher value) {
        return new JAXBElement<ViewSwitcher>(_ViewSwitcher_QNAME, ViewSwitcher.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinearLayout }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LinearLayout")
    public JAXBElement<LinearLayout> createLinearLayout(LinearLayout value) {
        return new JAXBElement<LinearLayout>(_LinearLayout_QNAME, LinearLayout.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EditText }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "EditText")
    public JAXBElement<EditText> createEditText(EditText value) {
        return new JAXBElement<EditText>(_EditText_QNAME, EditText.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ViewAnimator }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ViewAnimator")
    public JAXBElement<ViewAnimator> createViewAnimator(ViewAnimator value) {
        return new JAXBElement<ViewAnimator>(_ViewAnimator_QNAME, ViewAnimator.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TextView }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TextView")
    public JAXBElement<TextView> createTextView(TextView value) {
        return new JAXBElement<TextView>(_TextView_QNAME, TextView.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbsListView }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AbsListView")
    public JAXBElement<AbsListView> createAbsListView(AbsListView value) {
        return new JAXBElement<AbsListView>(_AbsListView_QNAME, AbsListView.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbsoluteLayout }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AbsoluteLayout")
    public JAXBElement<AbsoluteLayout> createAbsoluteLayout(AbsoluteLayout value) {
        return new JAXBElement<AbsoluteLayout>(_AbsoluteLayout_QNAME, AbsoluteLayout.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbsSeekBar }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AbsSeekBar")
    public JAXBElement<AbsSeekBar> createAbsSeekBar(AbsSeekBar value) {
        return new JAXBElement<AbsSeekBar>(_AbsSeekBar_QNAME, AbsSeekBar.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdapterView }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AdapterView")
    public JAXBElement<AdapterView> createAdapterView(AdapterView value) {
        return new JAXBElement<AdapterView>(_AdapterView_QNAME, AdapterView.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompoundButton }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CompoundButton")
    public JAXBElement<CompoundButton> createCompoundButton(CompoundButton value) {
        return new JAXBElement<CompoundButton>(_CompoundButton_QNAME, CompoundButton.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ImageView }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ImageView")
    public JAXBElement<ImageView> createImageView(ImageView value) {
        return new JAXBElement<ImageView>(_ImageView_QNAME, ImageView.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProgressBar }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ProgressBar")
    public JAXBElement<ProgressBar> createProgressBar(ProgressBar value) {
        return new JAXBElement<ProgressBar>(_ProgressBar_QNAME, ProgressBar.class, null, value);
    }

}
