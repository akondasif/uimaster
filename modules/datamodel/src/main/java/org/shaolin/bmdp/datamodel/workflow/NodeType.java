//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.27 at 10:56:36 PM CST 
//


package org.shaolin.bmdp.datamodel.workflow;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				Basic node type is an abstract type which extended
 * 				by all the real types. It contains some basic attributes
 * 				like timeout etc.When IEvent passed to one node, ac will
 * 				call the node's process() method. process and timeout
 * 				are handler beans which handle normal or abnormal event.
 * 			
 * 
 * <p>Java class for nodeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="nodeType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="process" type="{http://bmdp.shaolin.org/datamodel/Workflow}handlerType" minOccurs="0"/>
 *         &lt;element name="exception-handler" type="{http://bmdp.shaolin.org/datamodel/Workflow}exceptionHandlerType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="timeout" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="asyn" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "nodeType", propOrder = {
    "description",
    "process",
    "exceptionHandlers"
})
@XmlSeeAlso({
    ConditionNodeType.class,
    EndNodeType.class,
    SplitNodeType.class,
    TimeoutNodeType.class,
    GeneralNodeType.class
})
public class NodeType implements Serializable
{

    private final static long serialVersionUID = 1L;
    protected String description;
    protected HandlerType process;
    @XmlElement(name = "exception-handler")
    protected List<ExceptionHandlerType> exceptionHandlers;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "timeout")
    protected Long timeout;
    @XmlAttribute(name = "asyn")
    protected Boolean asyn;

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the process property.
     * 
     * @return
     *     possible object is
     *     {@link HandlerType }
     *     
     */
    public HandlerType getProcess() {
        return process;
    }

    /**
     * Sets the value of the process property.
     * 
     * @param value
     *     allowed object is
     *     {@link HandlerType }
     *     
     */
    public void setProcess(HandlerType value) {
        this.process = value;
    }

    /**
     * Gets the value of the exceptionHandlers property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the exceptionHandlers property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExceptionHandlers().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExceptionHandlerType }
     * 
     * 
     */
    public List<ExceptionHandlerType> getExceptionHandlers() {
        if (exceptionHandlers == null) {
            exceptionHandlers = new ArrayList<ExceptionHandlerType>();
        }
        return this.exceptionHandlers;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the timeout property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getTimeout() {
        return timeout;
    }

    /**
     * Sets the value of the timeout property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setTimeout(Long value) {
        this.timeout = value;
    }

    /**
     * Gets the value of the asyn property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isAsyn() {
        if (asyn == null) {
            return false;
        } else {
            return asyn;
        }
    }

    /**
     * Sets the value of the asyn property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAsyn(Boolean value) {
        this.asyn = value;
    }

}
