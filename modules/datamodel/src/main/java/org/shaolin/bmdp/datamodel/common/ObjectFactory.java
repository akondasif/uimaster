//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.27 at 02:36:42 PM CST 
//


package org.shaolin.bmdp.datamodel.common;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.shaolin.bmdp.datamodel.common package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Description_QNAME = new QName("http://bmdp.shaolin.org/datamodel/Common", "description");
    private final static QName _Entity_QNAME = new QName("http://bmdp.shaolin.org/datamodel/Common", "Entity");
    private final static QName _Diagram_QNAME = new QName("http://bmdp.shaolin.org/datamodel/Common", "Diagram");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.shaolin.bmdp.datamodel.common
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DiagramType }
     * 
     */
    public DiagramType createDiagramType() {
        return new DiagramType();
    }

    /**
     * Create an instance of {@link I18NPropertyType }
     * 
     */
    public I18NPropertyType createI18NPropertyType() {
        return new I18NPropertyType();
    }

    /**
     * Create an instance of {@link Category }
     * 
     */
    public Category createCategory() {
        return new Category();
    }

    /**
     * Create an instance of {@link EntityType }
     * 
     */
    public EntityType createEntityType() {
        return new EntityType();
    }

    /**
     * Create an instance of {@link TargetEntityType }
     * 
     */
    public TargetEntityType createTargetEntityType() {
        return new TargetEntityType();
    }

    /**
     * Create an instance of {@link MetaDataInfoType }
     * 
     */
    public MetaDataInfoType createMetaDataInfoType() {
        return new MetaDataInfoType();
    }

    /**
     * Create an instance of {@link ExtensionPropertyType }
     * 
     */
    public ExtensionPropertyType createExtensionPropertyType() {
        return new ExtensionPropertyType();
    }

    /**
     * Create an instance of {@link VariableType }
     * 
     */
    public VariableType createVariableType() {
        return new VariableType();
    }

    /**
     * Create an instance of {@link ParamType }
     * 
     */
    public ParamType createParamType() {
        return new ParamType();
    }

    /**
     * Create an instance of {@link StringIPropertyType }
     * 
     */
    public StringIPropertyType createStringIPropertyType() {
        return new StringIPropertyType();
    }

    /**
     * Create an instance of {@link I18NMetaDataItemType }
     * 
     */
    public I18NMetaDataItemType createI18NMetaDataItemType() {
        return new I18NMetaDataItemType();
    }

    /**
     * Create an instance of {@link I18NMetaDataType }
     * 
     */
    public I18NMetaDataType createI18NMetaDataType() {
        return new I18NMetaDataType();
    }

    /**
     * Create an instance of {@link ResourceBundleIPropertyType }
     * 
     */
    public ResourceBundleIPropertyType createResourceBundleIPropertyType() {
        return new ResourceBundleIPropertyType();
    }

    /**
     * Create an instance of {@link NameValueType }
     * 
     */
    public NameValueType createNameValueType() {
        return new NameValueType();
    }

    /**
     * Create an instance of {@link ExpressionType }
     * 
     */
    public ExpressionType createExpressionType() {
        return new ExpressionType();
    }

    /**
     * Create an instance of {@link ItemRefType }
     * 
     */
    public ItemRefType createItemRefType() {
        return new ItemRefType();
    }

    /**
     * Create an instance of {@link NameExpressionType }
     * 
     */
    public NameExpressionType createNameExpressionType() {
        return new NameExpressionType();
    }

    /**
     * Create an instance of {@link TargetJavaType }
     * 
     */
    public TargetJavaType createTargetJavaType() {
        return new TargetJavaType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://bmdp.shaolin.org/datamodel/Common", name = "description")
    public JAXBElement<String> createDescription(String value) {
        return new JAXBElement<String>(_Description_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EntityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://bmdp.shaolin.org/datamodel/Common", name = "Entity")
    public JAXBElement<EntityType> createEntity(EntityType value) {
        return new JAXBElement<EntityType>(_Entity_QNAME, EntityType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DiagramType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://bmdp.shaolin.org/datamodel/Common", name = "Diagram")
    public JAXBElement<DiagramType> createDiagram(DiagramType value) {
        return new JAXBElement<DiagramType>(_Diagram_QNAME, DiagramType.class, null, value);
    }

}
