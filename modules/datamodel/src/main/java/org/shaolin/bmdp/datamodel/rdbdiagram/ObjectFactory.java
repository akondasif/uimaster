//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.27 at 02:36:42 PM CST 
//


package org.shaolin.bmdp.datamodel.rdbdiagram;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.shaolin.bmdp.datamodel.rdbdiagram package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.shaolin.bmdp.datamodel.rdbdiagram
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SubQueryMappingType }
     * 
     */
    public SubQueryMappingType createSubQueryMappingType() {
        return new SubQueryMappingType();
    }

    /**
     * Create an instance of {@link SearchQueryType }
     * 
     */
    public SearchQueryType createSearchQueryType() {
        return new SearchQueryType();
    }

    /**
     * Create an instance of {@link RDBDiagram }
     * 
     */
    public RDBDiagram createRDBDiagram() {
        return new RDBDiagram();
    }

    /**
     * Create an instance of {@link TableType }
     * 
     */
    public TableType createTableType() {
        return new TableType();
    }

    /**
     * Create an instance of {@link ViewType }
     * 
     */
    public ViewType createViewType() {
        return new ViewType();
    }

    /**
     * Create an instance of {@link JoinTableType }
     * 
     */
    public JoinTableType createJoinTableType() {
        return new JoinTableType();
    }

    /**
     * Create an instance of {@link ConditionFieldValueType }
     * 
     */
    public ConditionFieldValueType createConditionFieldValueType() {
        return new ConditionFieldValueType();
    }

    /**
     * Create an instance of {@link StarLikeOperatorType }
     * 
     */
    public StarLikeOperatorType createStarLikeOperatorType() {
        return new StarLikeOperatorType();
    }

    /**
     * Create an instance of {@link FKType }
     * 
     */
    public FKType createFKType() {
        return new FKType();
    }

    /**
     * Create an instance of {@link SQLFieldMappingType }
     * 
     */
    public SQLFieldMappingType createSQLFieldMappingType() {
        return new SQLFieldMappingType();
    }

    /**
     * Create an instance of {@link PKType }
     * 
     */
    public PKType createPKType() {
        return new PKType();
    }

    /**
     * Create an instance of {@link ClassMappingType }
     * 
     */
    public ClassMappingType createClassMappingType() {
        return new ClassMappingType();
    }

    /**
     * Create an instance of {@link RDBType }
     * 
     */
    public RDBType createRDBType() {
        return new RDBType();
    }

    /**
     * Create an instance of {@link CompositeConditionMappingType }
     * 
     */
    public CompositeConditionMappingType createCompositeConditionMappingType() {
        return new CompositeConditionMappingType();
    }

    /**
     * Create an instance of {@link InheritAssociationType }
     * 
     */
    public InheritAssociationType createInheritAssociationType() {
        return new InheritAssociationType();
    }

    /**
     * Create an instance of {@link IndexType }
     * 
     */
    public IndexType createIndexType() {
        return new IndexType();
    }

    /**
     * Create an instance of {@link ListFieldMappingType }
     * 
     */
    public ListFieldMappingType createListFieldMappingType() {
        return new ListFieldMappingType();
    }

    /**
     * Create an instance of {@link SearchResultMappingType }
     * 
     */
    public SearchResultMappingType createSearchResultMappingType() {
        return new SearchResultMappingType();
    }

    /**
     * Create an instance of {@link SearchConditionMappingType }
     * 
     */
    public SearchConditionMappingType createSearchConditionMappingType() {
        return new SearchConditionMappingType();
    }

    /**
     * Create an instance of {@link LinkFieldType }
     * 
     */
    public LinkFieldType createLinkFieldType() {
        return new LinkFieldType();
    }

    /**
     * Create an instance of {@link OrderingType }
     * 
     */
    public OrderingType createOrderingType() {
        return new OrderingType();
    }

    /**
     * Create an instance of {@link CEEqualsOperatorType }
     * 
     */
    public CEEqualsOperatorType createCEEqualsOperatorType() {
        return new CEEqualsOperatorType();
    }

    /**
     * Create an instance of {@link LogicOperatorType }
     * 
     */
    public LogicOperatorType createLogicOperatorType() {
        return new LogicOperatorType();
    }

    /**
     * Create an instance of {@link LinkConditionMappingType }
     * 
     */
    public LinkConditionMappingType createLinkConditionMappingType() {
        return new LinkConditionMappingType();
    }

    /**
     * Create an instance of {@link ExpressionFieldValueType }
     * 
     */
    public ExpressionFieldValueType createExpressionFieldValueType() {
        return new ExpressionFieldValueType();
    }

    /**
     * Create an instance of {@link SimpleFieldValueType }
     * 
     */
    public SimpleFieldValueType createSimpleFieldValueType() {
        return new SimpleFieldValueType();
    }

    /**
     * Create an instance of {@link SequenceType }
     * 
     */
    public SequenceType createSequenceType() {
        return new SequenceType();
    }

    /**
     * Create an instance of {@link ConditionFieldMappingType }
     * 
     */
    public ConditionFieldMappingType createConditionFieldMappingType() {
        return new ConditionFieldMappingType();
    }

    /**
     * Create an instance of {@link ColumnType }
     * 
     */
    public ColumnType createColumnType() {
        return new ColumnType();
    }

    /**
     * Create an instance of {@link FieldMappingType }
     * 
     */
    public FieldMappingType createFieldMappingType() {
        return new FieldMappingType();
    }

    /**
     * Create an instance of {@link OperatorType }
     * 
     */
    public OperatorType createOperatorType() {
        return new OperatorType();
    }

    /**
     * Create an instance of {@link SubQueryMappingType.FromData }
     * 
     */
    public SubQueryMappingType.FromData createSubQueryMappingTypeFromData() {
        return new SubQueryMappingType.FromData();
    }

    /**
     * Create an instance of {@link SearchQueryType.FromData }
     * 
     */
    public SearchQueryType.FromData createSearchQueryTypeFromData() {
        return new SearchQueryType.FromData();
    }

}
