//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 10:06:53 AM CST 
//


package org.shaolin.bmdp.datamodel.flowdiagram;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.shaolin.bmdp.datamodel.flowdiagram package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.shaolin.bmdp.datamodel.flowdiagram
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link FlowChunk }
     * 
     */
    public FlowChunk createFlowChunk() {
        return new FlowChunk();
    }

    /**
     * Create an instance of {@link Connection }
     * 
     */
    public Connection createConnection() {
        return new Connection();
    }

    /**
     * Create an instance of {@link RectangleNodeType }
     * 
     */
    public RectangleNodeType createRectangleNodeType() {
        return new RectangleNodeType();
    }

    /**
     * Create an instance of {@link SplitTriangleNodeType }
     * 
     */
    public SplitTriangleNodeType createSplitTriangleNodeType() {
        return new SplitTriangleNodeType();
    }

    /**
     * Create an instance of {@link JoinTriangleNodeType }
     * 
     */
    public JoinTriangleNodeType createJoinTriangleNodeType() {
        return new JoinTriangleNodeType();
    }

    /**
     * Create an instance of {@link EllipseNodeType }
     * 
     */
    public EllipseNodeType createEllipseNodeType() {
        return new EllipseNodeType();
    }

    /**
     * Create an instance of {@link EndPoint }
     * 
     */
    public EndPoint createEndPoint() {
        return new EndPoint();
    }

    /**
     * Create an instance of {@link TriangleNodeType }
     * 
     */
    public TriangleNodeType createTriangleNodeType() {
        return new TriangleNodeType();
    }

    /**
     * Create an instance of {@link CircleNodeType }
     * 
     */
    public CircleNodeType createCircleNodeType() {
        return new CircleNodeType();
    }

    /**
     * Create an instance of {@link DiamondNodeType }
     * 
     */
    public DiamondNodeType createDiamondNodeType() {
        return new DiamondNodeType();
    }

}
