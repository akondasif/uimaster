<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.bmdp.analyzer.form.TableSelector</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="selectTable">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectTable-20150604847">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.List;
        import java.util.ArrayList;
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.bmdp.analyzer.be.TableStatisticImpl;
        import org.shaolin.bmdp.analyzer.IAnalyzerService;
        {  
        	AList tree = @page.getList("tableListUI");
        	List values = tree.getValues();
        	if (values == null || values.size() == 0) {
        		return;
        	}
        	
        	RefForm oldForm = @page.getRefForm("tableDetail");
            if (oldForm != null) {
               oldForm.remove();
               @page.removeForm("tableDetail");
            }
            
            TableStatisticImpl defaultUser = new TableStatisticImpl();
            defaultUser.setTableName(values.get(0).toString());
            
            IAnalyzerService service = (IAnalyzerService)AppContext.get().getService(IAnalyzerService.class);
            List[] columnNameList = new List[] {service.getTableColumnIds(defaultUser.getTableName()), service.getTableColumns(defaultUser.getTableName())};
        	HashMap input = new HashMap();
            input.put("beObject", defaultUser);
            input.put("columnNameList", columnNameList);
            input.put("editable", new Boolean(false));
            RefForm form = new RefForm("tableDetail", "org.shaolin.bmdp.analyzer.form.TableStatistic", input);
            Panel secondPanel = @page.getPanel("secondPanel");
            secondPanel.append(form);
        	
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Cancel">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelDetail1358686533">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Save">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {
            this.tableDetail.itemTable.syncBodyDataToServer();
        }
        ]]></ns2:expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="Save-20160412-1804">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.bmdp.analyzer.be.TableStatisticImpl;
        import org.shaolin.bmdp.analyzer.dao.AanlysisModel;
        { 
            RefForm form = (RefForm)@page.getElement("tableDetail"); 
            HashMap out = (HashMap)form.ui2Data();
            form.remove();
            @page.removeForm("tableDetail");
            
            TableStatisticImpl defaultUser = (TableStatisticImpl)out.get("beObject");
            if (defaultUser.getId() == 0) {
                AanlysisModel.INSTANCE.create(defaultUser);
            } else {
                AanlysisModel.INSTANCE.update(defaultUser);
            }
            
            RefForm form1 = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form1.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIPanelType" UIID="firstPanel">
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:component xsi:type="ns2:UIListType" UIID="tableListUI">
	        <ns2:UIStyle></ns2:UIStyle>
	        <ns2:Property name="editable">
             <ns2:value xsi:type="ns2:ExpressionPropertyType">
                  <ns2:expression>
                    <expressionString><![CDATA[
                  {
                     return $beObject.getTableName() == null || $beObject.getTableName().length() == 0;
                  }]]></expressionString>
                  </ns2:expression>
             </ns2:value>
         </ns2:Property>
	        <ns2:size xsi:type="ns2:ExpressionPropertyType">
	          <ns2:expression>
	            <expressionString>{return 20;}</expressionString>
	          </ns2:expression>
	        </ns2:size>
	        <ns2:multiple xsi:type="ns2:ExpressionPropertyType">
	          <ns2:expression>
	            <expressionString>{return true;}</expressionString>
	          </ns2:expression>
	        </ns2:multiple>
	        <ns2:EventListener xsi:type="ns2:ItemChangeListenerType">
	          <ns2:handler functionName="selectTable"></ns2:handler>
	        </ns2:EventListener>
	      </ns2:component>
	      <ns2:layoutConstraint>
	        <ns2:componentId>tableListUI</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
	      </ns2:layoutConstraint>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIPanelType" UIID="secondPanel">
          <ns2:UISkin xsi:type="ns2:UISkinType">
             <ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
             <ns2:param name="text">
                 <ns2:value xsi:type="ns2:StringPropertyType">
                     <ns2:value>Details: </ns2:value>
                 </ns2:value>
             </ns2:param>
          </ns2:UISkin>
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:component xsi:type="ns2:UIReferenceEntityType" UIID="tableDetail">
             <ns2:referenceEntity entityName="org.shaolin.bmdp.analyzer.form.TableStatistic" />
          </ns2:component>
          <ns2:layoutConstraint>
	        <ns2:componentId>tableDetail</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
	      </ns2:layoutConstraint>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>firstPanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>secondPanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="actionPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="okbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Save"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>OKbtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="cancelbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Cancel"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>Cancelbtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>okbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>cancelbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:layoutConstraint>
      <ns2:componentId>actionPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
        { 
        }]]></ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.bmdp.analyzer.be.TableStatistic"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="values" category="JavaClass">
      <type entityName="java.util.List"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="optionValues" category="JavaClass">
      <type entityName="java.util.List"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="displayItems" category="JavaClass">
      <type entityName="java.util.List"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIMultipleChoice"></ns2:mappingRule>
      <ns2:UIComponent componentPath="tableListUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="values" paramName="Value"></ns2:DataComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="optionValues" paramName="OptionValues"></ns2:DataComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="displayItems" paramName="OptionDisplayValues"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping1">
      <ns2:mappingRule entityName="org.shaolin.bmdp.analyzer.form.TableStatistic"></ns2:mappingRule>
      <ns2:UIComponent componentPath="tableDetail" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject" paramName="beObject"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString><![CDATA[
      import java.util.List;
      import java.util.ArrayList;
      import org.shaolin.bmdp.runtime.AppContext;
      import org.shaolin.bmdp.analyzer.IAnalyzerService;
      {
          IAnalyzerService service = (IAnalyzerService)AppContext.get().getService(IAnalyzerService.class);
          $optionValues = service.getAllTableList();
          $displayItems = service.getAllTableList();
          if ($beObject.getTableName() != null) {
              $values = new ArrayList();
              $values.add($beObject.getTableName());
          }
          
	      @odContext.executeAllMappings();
      }   
    ]]></expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>
      {
		@odContext.executeAllMappings();
	  }
	  </expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>