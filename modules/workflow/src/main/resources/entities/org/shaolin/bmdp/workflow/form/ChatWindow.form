<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.bmdp.workflow.form.ChatWindow</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="Send">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType" name="aaa">
        <expressionString><![CDATA[
        { 
            var message = this.enterMessageUI.value;
            if (message.trim() == "") {
                return;
            }
            var sessionId = this.sessionIdUI.value;
            if (sessionId == null || sessionId == "null") {
	           sessionId = "";
	        }
            var partyId = this.sentPartyIdUI.value;
	        var fromPartyId = this.sentPartyIdUI.value;
	        var toPartyId = this.receivedPartyIdUI.value;
	        var orgId = this.orgIdUI.value;
            var msg = {taskId: 0, orgId: orgId, sessionId: sessionId, fromPartyId: fromPartyId, 
                       toPartyId: toPartyId, content: this.sentPartyNameUI.value+" : "+message};
            this.nodesocket.emit('chatTo', msg);
            this.enterMessageUI.value="";
        }]]></expressionString>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="ClearMessage">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
         <ns2:expressionString><![CDATA[
         if(true){
          new UIMaster.ui.dialog({
              dialogType: UIMaster.ui.dialog.CONFIRM_DIALOG,
              message:'Are you sure remove all messages?',
              messageType:UIMaster.ui.dialog.Warning,
              optionType:UIMaster.ui.dialog.YES_NO_OPTION,
              title:'\u5220\u9664\u8282\u70B9?',
              height:150,
              width:300,
              handler: function() {
                 UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"clearMessage-20160305-063830",UIMaster.getValue(eventsource),o.__entityName);
              }
          }).open();
          return;
         }
         ]]></ns2:expressionString>
     </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="clearMessage-20160305-063830">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Cancel">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType" name="bbb">
        <expressionString><![CDATA[
        { 
            //var partyId = this.sentPartyIdUI.value;
            //this.nodesocket.emit('unregister', {partyId: partyId});
            //only for user logout.
            this.nodesocket.disconnect();
        }]]></expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelDetail-20160305-063830">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="serverURLUI">
       <ns2:Property name="value">
           <ns2:value xsi:type="ns2:ExpressionPropertyType">
	         <ns2:expression>
	           <expressionString><![CDATA[
	           import org.shaolin.bmdp.runtime.Registry;
	           { 
	               Registry instance = Registry.getInstance();
	               return instance.getValue("/System/webConstant/websocketServer"); 
	           }]]></expressionString>
	         </ns2:expression>
           </ns2:value>
        </ns2:Property>
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="taskIdUI">
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="orgIdUI">
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="sentPartyIdUI">
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="receivedPartyIdUI">
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="isAbcUI"><!-- is admin -->
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="sessionIdUI"><!-- for orders tracking. -->
    </ns2:component>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIPanelType" UIID="topPanel">
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
	        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:component xsi:type="ns2:UILabelType" UIID="sentPartyNameUI">
	        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
                <ns2:value>发送者</ns2:value>
            </ns2:widgetLabel>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UILabelType" UIID="receivedPartyNameUI">
	        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
                <ns2:value>接收者</ns2:value>
            </ns2:widgetLabel>
	      </ns2:component>
	      <ns2:layoutConstraint>
	        <ns2:componentId>sentPartyNameUI</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL" cellUIClass="uimaster_rightform_cell"></ns2:constraint>
	      </ns2:layoutConstraint>
	      <ns2:layoutConstraint>
	        <ns2:componentId>receivedPartyNameUI</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL" cellUIClass="uimaster_rightform_cell"></ns2:constraint>
	      </ns2:layoutConstraint>
      </ns2:component>
      <ns2:component xsi:type="ns2:UITableType" UIID="messageUI">
          <ns2:beElement>org.shaolin.bmdp.workflow.be.IChatHistory</ns2:beElement>
          <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
          <ns2:defaultRowSize>10</ns2:defaultRowSize>
          <ns2:showActionBar>false</ns2:showActionBar>
          <ns2:appendRowMode>true</ns2:appendRowMode>
          <ns2:showFilter>false</ns2:showFilter>
          <ns2:Property name="utype" >
            <ns2:value xsi:type="ns2:StringPropertyType">
                <value>swiper</value>
            </ns2:value>
          </ns2:Property>
          <ns2:Property name="style" >
            <ns2:value xsi:type="ns2:StringPropertyType">
                <value>height:220px;overflow-y: scroll;overflow-x: hidden;</value>
            </ns2:value>
          </ns2:Property>
          <ns2:query xsi:type="ns2:ExpressionPropertyType">
              <ns2:expression xsi:type="ns2:ExpressionType">
                  <ns2:expressionString><![CDATA[
                  import java.util.Collections;
                  import org.shaolin.uimaster.page.ajax.TableConditions;
                  import org.shaolin.bmdp.runtime.security.UserContext;
                  {
                        return Collections.emptyList();
                  }]]></ns2:expressionString>
              </ns2:expression>
          </ns2:query>
          <ns2:column xsi:type="ns2:UITableColumnType">
              <ns2:title xsi:type="ns2:StringPropertyType">
                  <ns2:value>对话消息记录</ns2:value>
              </ns2:title>
              <ns2:beFieldId>rowBE.id</ns2:beFieldId>
              <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
          </ns2:column>
      </ns2:component>
      <ns2:component xsi:type="ns2:UITextAreaType" UIID="enterMessageUI">
        <ns2:UIStyle>uimaster_chat_area</ns2:UIStyle>
        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
            <ns2:value>发送消息框：</ns2:value>
        </ns2:widgetLabel>
        <ns2:Property name="emojiSupport">
            <ns2:value xsi:type="ns2:BooleanPropertyType">
                <value>true</value>
            </ns2:value>
        </ns2:Property>
        <ns2:Property name="style">
            <ns2:value xsi:type="ns2:StringPropertyType">
                <value>width:100%;height:60px;</value>
            </ns2:value>
        </ns2:Property>
        <ns2:allowBlank xsi:type="ns2:BooleanPropertyType">
            <ns2:value>false</ns2:value>
        </ns2:allowBlank>
        <ns2:maxLength xsi:type="ns2:NumericPropertyType">
            <type>int</type>
            <value>80</value>
        </ns2:maxLength>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>topPanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL" cellUIClass="uimaster_rightform_cell"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>messageUI</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL" cellUIClass="uimaster_rightform_cell"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>enterMessageUI</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL" cellUIClass="uimaster_rightform_cell"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="actionPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="okbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Send"></ns2:handler>
        </ns2:EventListener>
        <ns2:editable xsi:type="ns2:ExpressionPropertyType">
          <ns2:expression>
            <expressionString>{return $isEditable;}</expressionString>
          </ns2:expression>
        </ns2:editable>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>Sentbtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <!-- 
      <ns2:component xsi:type="ns2:UIButtonType" UIID="clearbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="ClearMessage"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:StringPropertyType">
          <ns2:value>清空</ns2:value>
        </ns2:text>
      </ns2:component>
       -->
      <ns2:component xsi:type="ns2:UIButtonType" UIID="cancelbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Cancel"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>Closebtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>okbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <!-- 
      <ns2:layoutConstraint>
        <ns2:componentId>clearbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
       -->
      <ns2:layoutConstraint>
        <ns2:componentId>cancelbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:layoutConstraint>
      <ns2:componentId>actionPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
       var isAbc = this.isAbcUI.value;
       var sessionId = this.sessionIdUI.value;
       if (sessionId == null || sessionId == "null") {
           sessionId = "";
       }
       if (this.serverURLUI.value == "" || this.serverURLUI.value == "null") {
          alert("Error: server url does not specify.");
          return;
       }
       var partyId = this.sentPartyIdUI.value;
       var fromPartyId = this.sentPartyIdUI.value;
       var toPartyId = this.receivedPartyIdUI.value;
       $(this.messageUI).focus();
       var msgContainer = this.messageUI;
       var o = this;
       UIMaster.require("/js/socket.io.js");
       this.nodesocket = io.connect(this.serverURLUI.value);
       this.nodesocket.on('connect', function(e) {
            var msg = {partyId: partyId, isAbc: isAbc, sessionId: sessionId};
            o.nodesocket.emit('register', msg)
       });
       this.nodesocket.on('loginSuccess', function(e) {
            var msg = {fromPartyId: fromPartyId, toPartyId: toPartyId, sessionId: sessionId};
            o.nodesocket.emit('history', msg);
       });
       this.nodesocket.on('alreadyLogined', function(e) {
            var msg = {fromPartyId: fromPartyId, toPartyId: toPartyId, sessionId: sessionId};
            o.nodesocket.emit('history', msg);
       });
       this.nodesocket.on('loginFail', function(e) {
            $(this.enterMessageUI).attr("disabled", "disabled");
       });
       this.nodesocket.on('history', function(e) {
            for (var i=0;i<e.length;i++) {
                var color = ((i%2==0)?"uimaster_chat_item_even":"uimaster_chat_item_old");
	            var row = "<div class=\"swiper-slide uimaster_chat_item_to "+color+"\"><div><div class=\"uimaster_chat_time\">"
					 + e[i].CREATEDATE + "</div><div class=\"uimaster_chat_message\"> " + e[i].MESSAGE + "</div></div></div>"
	            msgContainer.appendSlide($(row));
            }
       });
       this.nodesocket.on('chatTo', function(e) {
            var color = ((msgContainer.children[0].childElementCount%2==0)?"uimaster_chat_item_even":"uimaster_chat_item_old");
            var row = "<div class=\"swiper-slide uimaster_chat_item_to "+color+"\"><div><div class=\"uimaster_chat_time\">"
				 + new Date() + "</div><div class=\"uimaster_chat_message\"> " + e.content + "</div></div></div>"
            msgContainer.appendSlide($(row));
       });
    ]]>
    </ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.bmdp.workflow.be.ChatHistory"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="sentPartyName" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="isEditable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="Internal" name="isAdmin" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="recievedPartyName" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UITextWithNumber"></ns2:mappingRule>
      <ns2:UIComponent componentPath="taskIdUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.taskId" paramName="Number"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping1">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UITextWithNumber"></ns2:mappingRule>
      <ns2:UIComponent componentPath="orgIdUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.orgId" paramName="Number"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping2">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UITextWithNumber"></ns2:mappingRule>
      <ns2:UIComponent componentPath="sentPartyIdUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.sentPartyId" paramName="Number"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping3">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="sentPartyNameUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="StringData">
        <ns2:expression>
          <expressionString>$sentPartyName</expressionString>
        </ns2:expression>
      </ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping4">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UITextWithNumber"></ns2:mappingRule>
      <ns2:UIComponent componentPath="receivedPartyIdUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.receivedPartyId" paramName="Number"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping5">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="receivedPartyNameUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="StringData">
        <ns2:expression>
          <expressionString>$recievedPartyName</expressionString>
        </ns2:expression>
      </ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping7">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="isAbcUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="isAdmin" paramName="StringData"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping8">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="sessionIdUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.sessionId" paramName="StringData"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString>
      import org.shaolin.bmdp.runtime.AppContext;
      import org.shaolin.bmdp.runtime.security.UserContext;
      import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
      {
      if ($beObject.getSessionId() == null || $beObject.getSessionId().length() == 0) {
         throw new java.lang.IllegalArgumentException("Chat session id must be specified!");
      }
      ICoordinatorService coorService = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
      $isEditable = !coorService.isSessionEnded($beObject.getSessionId());
      $isAdmin = UserContext.getUserContext().isAdmin();
@odContext.executeAllMappings();
}</expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>