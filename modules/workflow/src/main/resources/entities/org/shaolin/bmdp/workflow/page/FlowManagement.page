<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.bmdp.workflow.page.FlowManagement</entityName>
	<systemVersion>0</systemVersion>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
	    <ns2:eventHandler functionName="newWorkflow">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="newWorkflow35433">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.bmdp.datamodel.workflow.*;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import java.lang.Math; 
                    {
                    	Workflow wf = new Workflow();
																					wf.setEntityName("NewWorkflow_" + (int)(Math.random() * 100));
																					wf.setDescription(wf.getEntityName());
																					ConfType conf = new ConfType();
																					wf.setConf(conf);
																					
                    	HashMap input = new HashMap();
                     input.put("beObject", wf);
                     input.put("parentUiid", "flowDiagram");
                     input.put("editable", new Boolean(true));
                     RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.CreateWorkflow", input);
                     @page.addElement(form);
                     
                     form.openInWindows("Create Work Flow", null);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="openWorkflow">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openWorkflow543543">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.util.List;
                    import java.io.StringReader;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.commonmodel.be.ModuleGroupImpl;
                    import org.shaolin.bmdp.runtime.be.IBusinessEntity;
                    import org.shaolin.bmdp.runtime.entity.EntityUtil;
					               import org.shaolin.bmdp.datamodel.workflow.Workflow;
                    import org.shaolin.bmdp.workflow.dao.WorkflowModel;
                    import org.shaolin.bmdp.workflow.ce.ModuleType;
                    import org.shaolin.bmdp.workflow.be.FlowEntityImpl;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import org.shaolin.bmdp.workflow.be.UIFlowsImpl;
                    import org.shaolin.bmdp.workflow.ui.PageUtil;
                    {
                    	Tree flowTree = @page.getTree("functionTree");
                    	if(flowTree.getSelectedItemId() == null || flowTree.getSelectedItemId().isEmpty()) {
                    		  return;
                    	}
                    	System.out.println("SelectedItemId: " + flowTree.getSelectedItemId() + 
                    	                   ", Parent: " + flowTree.getSelectedParentItemId());
                     String workflowName = flowTree.getSelectedParentItemId();
                     String currentFlowName = flowTree.getSelectedItemId();
                     if ("#".equals(workflowName)) {
                        return;
                     }
													        Workflow flowModel = (Workflow)AppContext.get().getEntityManager().getEntity(flowTree.getSelectedParentItemId(), Workflow.class);
													        FlowChunk flowView = null;
													        UIFlowsImpl searchCriteria = new UIFlowsImpl();
																					searchCriteria.setModuleType(ModuleType.WORKFLOW);
																					searchCriteria.setName(currentFlowName);
																					int count = (int)WorkflowModel.INSTANCE.searchFlowsCount(searchCriteria);
																					if (count == 0) {
																						flowView = new FlowChunk();
																						flowView.setEntityName(currentFlowName);
																						WorkFlowDiagram.syncFlow(currentFlowName, flowModel, flowView);
																					} else {
																						List groupflow = WorkflowModel.INSTANCE.searchFlows(searchCriteria, null, 0, 1);
																						String xml = ((UIFlowsImpl)groupflow.get(0)).getFlow();
																						StringReader reader = new StringReader(xml);
																						flowView = (FlowChunk)EntityUtil.unmarshaller(FlowChunk.class, reader);
																					}
						
                     WorkFlowDiagram diagram = (WorkFlowDiagram)@page.getElement("flowDiagram");
																					diagram.setWorkflow(currentFlowName, flowModel, flowView);
																					diagram.refreshModel();
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="editFlow">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="editFlow-20150819-0930">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.util.List;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.bmdp.runtime.be.IBusinessEntity;
                    import org.shaolin.bmdp.runtime.entity.EntityUtil;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import org.shaolin.bmdp.datamodel.workflow.*;
                    import org.shaolin.bmdp.workflow.ui.PageUtil;
                    {
                     Tree flowTree = @page.getTree("functionTree");
                     if(flowTree.getSelectedItemId() == null || flowTree.getSelectedItemId().isEmpty()) {
                        return;
                     }
                     System.out.println("SelectedItemId: " + flowTree.getSelectedItemId() + 
                                        ", Parent: " + flowTree.getSelectedParentItemId());
                     String workflowName = flowTree.getSelectedParentItemId();
                     String currentFlowName = flowTree.getSelectedItemId();
                    
                     WorkFlowDiagram diagram = (WorkFlowDiagram)@page.getElement("flowDiagram");
                     FlowType subFlow = diagram.getSelectedFlow();
                     HashMap input = new HashMap();
                     input.put("beObject", subFlow);
                     input.put("parentUiid", "flowDiagram");
                     input.put("editable", new Boolean(true));
                     RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.CreateFlow", input);
                     @page.addElement(form);
                     
                     form.openInWindows("Open Flow", null);
                     form.addWindowsClosedCallBack(new TreeCallBack("functionTree"));
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="addFlow">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="addFlow-20150816-1118">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.util.List;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.bmdp.runtime.be.IBusinessEntity;
                    import org.shaolin.bmdp.runtime.entity.EntityUtil;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import org.shaolin.bmdp.datamodel.workflow.*;
                    import org.shaolin.bmdp.workflow.ui.PageUtil;
                    {
                     FlowType subFlow = new FlowType();
                     FlowConfType conf = new FlowConfType();
                     subFlow.setConf(conf);
                     HashMap input = new HashMap();
                     input.put("beObject", subFlow);
                     input.put("parentUiid", "flowDiagram");
                     input.put("editable", new Boolean(true));
                     RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.CreateFlow", input);
                     @page.addElement(form);
                     
                     form.openInWindows("Create Sub Flow", null);
                     form.addWindowsClosedCallBack(new TreeCallBack("functionTree"));
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="removeFlow">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="removeFlow-20150809-1101">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.util.List;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.bmdp.runtime.be.IBusinessEntity;
                    import org.shaolin.bmdp.runtime.entity.EntityUtil;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import org.shaolin.bmdp.datamodel.workflow.*;
                    import org.shaolin.bmdp.workflow.ui.PageUtil;
                    {
                     System.out.println("reove flow!");
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="refreshFlow">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="refreshFlow-20150809-1101">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.util.List;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.bmdp.runtime.be.IBusinessEntity;
                    import org.shaolin.bmdp.runtime.entity.EntityUtil;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import org.shaolin.bmdp.datamodel.workflow.*;
                    import org.shaolin.bmdp.workflow.ui.PageUtil;
                    {
                     System.out.println("reove flow!");
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="addMissionNode">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="addMissionNode_20150808-104357">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.util.List;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
					               import org.shaolin.bmdp.datamodel.workflow.Workflow;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import org.shaolin.bmdp.workflow.ui.PageUtil;
                    import org.shaolin.bmdp.datamodel.workflow.*;
                    import org.shaolin.bmdp.datamodel.common.ExpressionType;
                    {
                    	MissionNodeType node = new MissionNodeType();
                    	HandlerType handler = new HandlerType();
                    	ExpressionType expr = new ExpressionType();
                    	expr.setExpressionString("{}");
                    	handler.setExpression(expr);
                    	node.setProcess(handler); 
                     HashMap input = new HashMap();
                     input.put("beObject", node);
                     input.put("parentUiid", "flowDiagram");
                     input.put("editable", new Boolean(true));
                     RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.CreateMissionNode", input);
                     @page.addElement(form);
                     
                     form.openInWindows("Create Mission Node", null);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="addStartNode">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="addStartNode_20150808-104357">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.util.List;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
					               import org.shaolin.bmdp.datamodel.workflow.Workflow;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import org.shaolin.bmdp.workflow.ui.PageUtil;
                    import org.shaolin.bmdp.datamodel.workflow.*;
                    import org.shaolin.bmdp.datamodel.common.ExpressionType;
                    {
                    	StartNodeType node = new StartNodeType();
                    	HandlerType handler = new HandlerType();
                    	ExpressionType expr = new ExpressionType();
                    	expr.setExpressionString("{}");
                    	handler.setExpression(expr);
                    	node.setProcess(handler); 
                     HashMap input = new HashMap();
                     input.put("beObject", node);
                     input.put("parentUiid", "flowDiagram");
                     input.put("editable", new Boolean(true));
                     RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.CreateStartNode", input);
                     @page.addElement(form);
                     
                     form.openInWindows("Create Mission Node", null);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="addEndNode">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="addEndNode_20150808-104357">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.util.List;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
					               import org.shaolin.bmdp.datamodel.workflow.Workflow;
                    import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                    import org.shaolin.bmdp.workflow.ui.PageUtil;
                    import org.shaolin.bmdp.datamodel.workflow.*;
                    import org.shaolin.bmdp.datamodel.common.ExpressionType;
                    {
                    	EndNodeType node = new EndNodeType();
                    	HandlerType handler = new HandlerType();
                    	ExpressionType expr = new ExpressionType();
                    	expr.setExpressionString("{}");
                    	handler.setExpression(expr);
                    	node.setProcess(handler); 
                     HashMap input = new HashMap();
                     input.put("beObject", node);
                     input.put("parentUiid", "flowDiagram");
                     input.put("editable", new Boolean(true));
                     RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.CreateEndNode", input);
                     @page.addElement(form);
                     
                     form.openInWindows("Create Mission Node", null);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="saveWorkflow">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="saveWorkflow432423">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.ArrayList;
                    import java.util.List;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.bmdp.runtime.entity.EntityUtil;
                    import org.shaolin.vogerp.commonmodel.be.IModule;
                    import org.shaolin.vogerp.commonmodel.be.ModuleImpl;
                    import org.shaolin.bmdp.workflow.be.UIFlowsImpl;
                    import org.shaolin.bmdp.datamodel.flowdiagram.NodeType;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.bmdp.workflow.dao.WorkflowModel;
                    import org.shaolin.bmdp.workflow.ce.ModuleType;
                    import org.shaolin.bmdp.workflow.be.FlowEntityImpl;
                    import org.shaolin.bmdp.runtime.spi.IEntityManager;
                    {
                        WorkFlowDiagram flow = (WorkFlowDiagram)@page.getElement("flowDiagram");
                        FlowEntityImpl flowModel = new FlowEntityImpl();
                        flowModel.setEntityName(flow.getWorflowModel().getEntityName());
                        String flowModelXml = flow.getFlowModelXML();
                        int count = (int)WorkflowModel.INSTANCE.searchFlowEntitiesCount(flowModel);
                        if (count == 0) {
	                           flowModel.setContent(flowModelXml);
                            WorkflowModel.INSTANCE.create(flowModel);
                        } else {
                        	List groupflow = WorkflowModel.INSTANCE.searchFlowEntities(flowModel, null, 0, 1);
                            ((FlowEntityImpl)groupflow.get(0)).setContent(flowModelXml);
                            WorkflowModel.INSTANCE.update((FlowEntityImpl)groupflow.get(0));
                        }
                        
                        String flowViewName = flow.getWorflowView().getEntityName();
                        UIFlowsImpl searchCriteria = new UIFlowsImpl();
                        searchCriteria.setModuleType(ModuleType.WORKFLOW);
                        searchCriteria.setName(flowViewName);
                        count = (int)WorkflowModel.INSTANCE.searchFlowsCount(searchCriteria);
                        if (count == 0) {
                            searchCriteria.setFlow(flow.getFlowViewXML());
                            WorkflowModel.INSTANCE.create(searchCriteria);
                        } else {
	                        List groupflow = WorkflowModel.INSTANCE.searchFlows(searchCriteria, null, 0, 1);
                            ((UIFlowsImpl)groupflow.get(0)).setFlow(flow.getFlowViewXML());
                            WorkflowModel.INSTANCE.update((UIFlowsImpl)groupflow.get(0));
                        }
                        
                        IEntityManager entityManager = AppContext.get().getEntityManager();
                        entityManager.appendEntity(flow.getWorflowModel());
                        
                        flow.saveSuccess();
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="refreshModuleGroup">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="refreshModuleGroup-201506182322">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.ArrayList;
                    import java.util.List;
                    import java.io.StringWriter;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    {
                        WorkFlowDiagram flow = (WorkFlowDiagram)@page.getElement("flowDiagram");
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="showXmlEditor">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="showXmlEditor-201508081054">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import java.io.StringWriter;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.bmdp.workflow.be.FlowEntityImpl;
                    import org.shaolin.bmdp.workflow.dao.WorkflowModel;
                    import org.shaolin.bmdp.workflow.ce.ModuleType;
                    {
				                    WorkFlowDiagram flow = (WorkFlowDiagram)@page.getElement("flowDiagram");
																						  FlowEntityImpl flowModel = new FlowEntityImpl();
																						  flowModel.setEntityName(flow.getWorflowModel().getEntityName());
                        flowModel.setContent(flow.getFlowModelXML());
				                    HashMap input = new HashMap();
				                    input.put("parentUiid", "flowDiagram");
				                    input.put("flowObject", flowModel);
				                    input.put("editable", new Boolean(true));
				                    RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.WorkflowXMLEditor", input);
				                    @page.addElement(form);
				                    
				                    form.openInWindows("XML Editor", null, 690, 500);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
		<ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component xsi:type="ns2:UIPanelType" UIID="topPanel">
				<ns2:layout xsi:type="ns2:TableLayoutType">
					<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
					<ns2:columnWidthWeight>0.8</ns2:columnWidthWeight>
					<ns2:columnWidthWeight>80</ns2:columnWidthWeight>
				</ns2:layout>
				<ns2:component xsi:type="ns2:UIFlowDiagramType" UIID="flowDiagram">
				    <ns2:loadDateModel xsi:type="ns2:ExpressionPropertyType">
          <ns2:expression xsi:type="ns2:ExpressionType">
              <ns2:expressionString><![CDATA[
							         import org.shaolin.bmdp.datamodel.workflow.Workflow;
                 {
                 	// create a empty flow initially.
                 	return new Workflow();
                 }]]></ns2:expressionString>
             </ns2:expression>
         </ns2:loadDateModel>
				    <ns2:loadFlow xsi:type="ns2:ExpressionPropertyType">
           <ns2:expression xsi:type="ns2:ExpressionType">
               <ns2:expressionString><![CDATA[
                 import org.shaolin.bmdp.datamodel.flowdiagram.FlowChunk;
                     {
                     	return new FlowChunk();
                     }]]></ns2:expressionString>
           </ns2:expression>
       </ns2:loadFlow>
       <ns2:defaultActions>
           <ns2:newNode>newWorkflow</ns2:newNode>
           <ns2:saveFlow>saveWorkflow</ns2:saveFlow>                        
           <ns2:refreshFlow>refreshModuleGroup</ns2:refreshFlow>
           <ns2:discardChange>discardChange</ns2:discardChange>
       </ns2:defaultActions>
       <ns2:actionGroup>
           <ns2:type>radio</ns2:type>
           <ns2:action>
               <ns2:uiid>addFlow</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>Add Sub Flow</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>addFlow</ns2:function>
           </ns2:action>
           <ns2:action>
               <ns2:uiid>addChildFlowNode</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>Add Child Flow Node</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>addChildFlowNode</ns2:function>
           </ns2:action>
           <ns2:action>
               <ns2:uiid>addMissionNode</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>Add Mission Node</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>addMissionNode</ns2:function>
           </ns2:action>
           <ns2:action>
               <ns2:uiid>addStartNode</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>Add Start Node</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>addStartNode</ns2:function>
           </ns2:action>
           <ns2:action>
               <ns2:uiid>addEndNode</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>Add End Node</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>addEndNode</ns2:function>
           </ns2:action>
       </ns2:actionGroup>
       <ns2:actionGroup>
           <ns2:type>radio</ns2:type>
           <ns2:action>
               <ns2:uiid>addSplitNode</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>Add Split Node</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>addSplitNode</ns2:function>
           </ns2:action>
           <ns2:action>
               <ns2:uiid>addJoinNode</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>Add Join Node</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>addJoinNode</ns2:function>
           </ns2:action>
       </ns2:actionGroup>
       <ns2:actionGroup>
           <ns2:type>radio</ns2:type>
           <ns2:action>
               <ns2:uiid>showXmlEditor</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>XML Editor</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>showXmlEditor</ns2:function>
           </ns2:action>
           <ns2:action>
               <ns2:uiid>resyncFlowView</ns2:uiid>
               <ns2:title xsi:type="ns2:StringPropertyType">
                   <ns2:value>Re-sync Flow View</ns2:value>
               </ns2:title>
               <ns2:icon>ui-icon-note</ns2:icon>
               <ns2:function>resyncFlowView</ns2:function>
           </ns2:action>
       </ns2:actionGroup>
   </ns2:component>
   <ns2:component xsi:type="ns2:UIPanelType" UIID="propertiesPanel">
					<ns2:layout xsi:type="ns2:TableLayoutType">
						<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
						<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
						<ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
					</ns2:layout>
	     <ns2:component xsi:type="ns2:UIWebTreeType" UIID="functionTree">
						<ns2:title xsi:type="ns2:StringPropertyType">
							<ns2:value>Flows</ns2:value>
						</ns2:title>
						<ns2:opened>true</ns2:opened>
						<ns2:nodeIcon>/images/nodeicon.jpg</ns2:nodeIcon>
						<ns2:itemIcon>/images/itemicon.jpg</ns2:itemIcon>
						<ns2:selectMode>Multiple</ns2:selectMode>
						<ns2:expandTreeEvent>expandTree</ns2:expandTreeEvent>
      <ns2:selectNodeEvent>openWorkflow</ns2:selectNodeEvent>
      <ns2:addNodeEvent>addFlow</ns2:addNodeEvent>
      <ns2:deleteNodeEvent>removeFlow</ns2:deleteNodeEvent>
      <ns2:refreshNodeEvent>refreshFlow</ns2:refreshNodeEvent>
      <ns2:action>
          <ns2:uiid>editFlow</ns2:uiid>
          <ns2:title xsi:type="ns2:StringPropertyType">
              <ns2:value>Edit Flow...</ns2:value>
          </ns2:title>
          <ns2:icon>ui-icon-note</ns2:icon>
          <ns2:function>editFlow</ns2:function>
      </ns2:action>
						<ns2:initExpression xsi:type="ns2:ExpressionPropertyType">
							<ns2:expression xsi:type="ns2:ExpressionType">
								<ns2:expressionString><![CDATA[
        import org.shaolin.bmdp.workflow.ui.PageUtil;
								{
									return PageUtil.loadWorkflowTree();
								}]]></ns2:expressionString>
							</ns2:expression>
						</ns2:initExpression>
					</ns2:component>
     <ns2:layoutConstraint>
         <ns2:componentId>functionTree</ns2:componentId>
         <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
             x="0" y="0" align="FULL"></ns2:constraint>
     </ns2:layoutConstraint>
   </ns2:component> 
   <ns2:layoutConstraint>
        <ns2:componentId>flowDiagram</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
            x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:layoutConstraint>
        <ns2:componentId>propertiesPanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
            x="1" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
			</ns2:component>
			<ns2:layoutConstraint>
				<ns2:componentId>topPanel</ns2:componentId>
				<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
					x="0" y="0" align="FULL"></ns2:constraint>
			</ns2:layoutConstraint>
		</ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
		<ns2:DataEntity category="JavaClass" name="workflowName" scope="Internal">
			<ns2:type entityName="java.lang.String" />
			<ns2:default><ns2:expressionString><![CDATA["t"]]></ns2:expressionString></ns2:default>
		</ns2:DataEntity>
		<ns2:DataEntity category="JavaPrimitive" name="workflowId" scope="Internal">
			<ns2:type entityName="long" />
			<ns2:default><ns2:expressionString><![CDATA[-1]]></ns2:expressionString></ns2:default>
		</ns2:DataEntity>
	</ns2:ODMapping>
</ns2:UIPage>
