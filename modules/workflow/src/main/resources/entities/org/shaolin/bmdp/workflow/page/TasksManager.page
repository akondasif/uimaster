<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.bmdp.workflow.page.TasksManager</entityName>
	<systemVersion>0</systemVersion>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
    <ns2:eventHandler functionName="createTask">
       <ns2:ops xsi:type="ns2:OpCallAjaxType" name="showBlanktaskInfoPanel">
            <ns2:exp>
                <ns2:expressionString><![CDATA[
                import java.util.HashMap;
                import org.shaolin.uimaster.page.AjaxContext;
                import org.shaolin.uimaster.page.AjaxActionHelper;
                import org.shaolin.uimaster.page.ajax.*;
                import org.shaolin.bmdp.workflow.be.TaskImpl;
                {
                    //TODO: unsupported to create task.
                }
                ]]></ns2:expressionString>
            </ns2:exp>
        </ns2:ops>
    </ns2:eventHandler>
    <ns2:eventHandler functionName="openTask">
        <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openTask-20150809-2009">
            <ns2:exp>
                <ns2:expressionString><![CDATA[
                import java.util.HashMap;
                import org.shaolin.uimaster.page.AjaxContext;
                import org.shaolin.uimaster.page.ajax.*;
                import org.shaolin.bmdp.workflow.be.TaskImpl;
                {
                    Table tasksTable = (Table)@page.getElement("tasksTable");
                    if (tasksTable.getSelectedRow() == null) {
                        return;
                    }
                    
                    TaskImpl defaultUser = (TaskImpl)tasksTable.getSelectedRow();
                    HashMap input = new HashMap();
                    input.put("beObject", defaultUser);
                    input.put("editable", new Boolean(true));
                    RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.Task", input);
                    @page.addElement(form);
                    
                    form.openInWindows("Modify Item", new TableCallBack("tasksTable"), 690, 380);
                }
                ]]></ns2:expressionString>
            </ns2:exp>
        </ns2:ops>
    </ns2:eventHandler>
    <ns2:eventHandler functionName="postponeTask">
       <ns2:ops xsi:type="ns2:OpCallAjaxType" name="postponeTask-20150827-1152">
            <ns2:exp>
                <ns2:expressionString><![CDATA[
                import java.util.HashMap;
                import org.shaolin.uimaster.page.AjaxContext;
                import org.shaolin.uimaster.page.ajax.*;
                import org.shaolin.bmdp.workflow.be.TaskImpl;
                import org.shaolin.bmdp.runtime.AppContext;
                import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                {
                    Table tasksTable = (Table)@page.getElement("tasksTable");
                    if (tasksTable.getSelectedRow() == null) {
                        return;
                    }
                    
                    TaskImpl defaultUser = (TaskImpl)tasksTable.getSelectedRow();
                    ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
                    service.postponeTask(defaultUser, null);
                    //TODO: select a calendar first.
                    
                    tasksTable.refresh();
                }
                ]]></ns2:expressionString>
            </ns2:exp>
        </ns2:ops>
    </ns2:eventHandler>
    <ns2:eventHandler functionName="completeTask">
       <ns2:ops xsi:type="ns2:OpCallAjaxType" name="completeTask-20150827-1152">
            <ns2:exp>
                <ns2:expressionString><![CDATA[
                import java.util.HashMap;
                import org.shaolin.uimaster.page.AjaxContext;
                import org.shaolin.uimaster.page.ajax.*;
                import org.shaolin.bmdp.workflow.be.TaskImpl;
                import org.shaolin.bmdp.runtime.AppContext;
                import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                {
                    Table tasksTable = (Table)@page.getElement("tasksTable");
                    if (tasksTable.getSelectedRow() == null) {
                        return;
                    }
                    
                    TaskImpl defaultUser = (TaskImpl)tasksTable.getSelectedRow();
                    ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
                    service.completeTask(defaultUser);
                    
                    tasksTable.refresh();
                }
                ]]></ns2:expressionString>
            </ns2:exp>
        </ns2:ops>
    </ns2:eventHandler>
    <ns2:eventHandler functionName="cancelTask">
       <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelTask-20150827-1152">
            <ns2:exp>
                <ns2:expressionString><![CDATA[
                import java.util.HashMap;
                import org.shaolin.uimaster.page.AjaxContext;
                import org.shaolin.uimaster.page.ajax.*;
                import org.shaolin.bmdp.workflow.be.TaskImpl;
                import org.shaolin.bmdp.runtime.AppContext;
                import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                {
                    Table tasksTable = (Table)@page.getElement("tasksTable");
                    if (tasksTable.getSelectedRow() == null) {
                        return;
                    }
                    
                    TaskImpl defaultUser = (TaskImpl)tasksTable.getSelectedRow();
                    ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
                    service.cancelTask(defaultUser);
                    
                    tasksTable.refresh();
                }
                ]]></ns2:expressionString>
            </ns2:exp>
        </ns2:ops>
    </ns2:eventHandler>
    <ns2:eventHandler functionName="createServerNode">
        <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createServerNode-20150809-2009">
            <ns2:exp>
                <ns2:expressionString><![CDATA[
                import java.util.HashMap;
                import org.shaolin.uimaster.page.AjaxContext;
                import org.shaolin.uimaster.page.ajax.*;
                import org.shaolin.bmdp.workflow.be.ServerNodeInfoImpl;
                {
                    ServerNodeInfoImpl defaultUser = new ServerNodeInfoImpl();
                    HashMap input = new HashMap();
                    input.put("beObject", defaultUser);
                    input.put("editable", new Boolean(true));
                    RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.ServerNodeInfo", input);
                    @page.addElement(form);
                    
                    form.openInWindows("Create Server Node", new TableCallBack("serverNodeTable"), 690, 380);
                }
                ]]></ns2:expressionString>
            </ns2:exp>
        </ns2:ops>
    </ns2:eventHandler>
    <ns2:eventHandler functionName="openServerNode">
        <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openServerNode-20150809-2009">
            <ns2:exp>
                <ns2:expressionString><![CDATA[
                import java.util.HashMap;
                import org.shaolin.uimaster.page.AjaxContext;
                import org.shaolin.uimaster.page.ajax.*;
                import org.shaolin.bmdp.workflow.be.ServerNodeInfoImpl;
                {
                    Table tasksTable = (Table)@page.getElement("serverNodeTable");
                    if (tasksTable.getSelectedRow() == null) {
                        return;
                    }
                    
                    ServerNodeInfoImpl defaultUser = (ServerNodeInfoImpl)tasksTable.getSelectedRow();
                    HashMap input = new HashMap();
                    input.put("beObject", defaultUser);
                    input.put("editable", new Boolean(true));
                    RefForm form = new RefForm("userForm", "org.shaolin.bmdp.workflow.form.ServerNodeInfo", input);
                    @page.addElement(form);
                    
                    form.openInWindows("Modify Server Node", new TableCallBack("serverNodeTable"), 690, 380);
                }
                ]]></ns2:expressionString>
            </ns2:exp>
        </ns2:ops>
    </ns2:eventHandler>
    <ns2:eventHandler functionName="deleteUser"></ns2:eventHandler>
    <ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
        <ns2:UISkin xsi:type="ns2:UISkinType">
            <ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
            <ns2:param name="text">
                <ns2:value xsi:type="ns2:StringPropertyType">
                    <ns2:value></ns2:value>
                </ns2:value>
            </ns2:param>
        </ns2:UISkin>
        <ns2:layout xsi:type="ns2:TableLayoutType">
            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
        </ns2:layout>
        <ns2:component xsi:type="ns2:UIHiddenType" UIID="CENameUI"></ns2:component>
        <ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
			     <ns2:ajaxLoad>true</ns2:ajaxLoad>
              <ns2:tab uiid="tasksTablePanel">
               <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
                   <ns2:bundle>org_shaolin_bmdp_workflow_i18n</ns2:bundle>
                   <ns2:key>org.shaolin.bmdp.workflow.page.TaskManager.tasksTablePanel</ns2:key>
               </ns2:title>
               <ns2:panel UIID="tasksTablePanel">
               <ns2:layout xsi:type="ns2:TableLayoutType">
                   <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                   <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
               </ns2:layout>
			            <ns2:component xsi:type="ns2:UITableType" UIID="tasksTable">
			                <ns2:beElement>org.shaolin.bmdp.workflow.be.Task</ns2:beElement>
			                <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
			                <ns2:defaultRowSize>10</ns2:defaultRowSize>
			                <ns2:showActionBar>true</ns2:showActionBar>
			                <ns2:showFilter>true</ns2:showFilter>
			                <ns2:query xsi:type="ns2:ExpressionPropertyType">
			                    <ns2:expression xsi:type="ns2:ExpressionType">
			                        <ns2:expressionString><![CDATA[
			                        import java.util.List;
			                        import org.shaolin.uimaster.page.ajax.TableConditions;
			                        import org.shaolin.bmdp.workflow.be.TaskImpl;
			                        import org.shaolin.bmdp.runtime.AppContext;
			                        import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
			                        {
			                              if ($tableCondition == null) {
			                                 $tableCondition = TableConditions.createCondition(new TaskImpl());
			                                 $tableCondition.setCount(10);
			                              }
			                              TaskImpl condition = (TaskImpl)$tableCondition.getCondition();
			                              ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
			                              return service.getAllTasks();
			                        }]]></ns2:expressionString>
			                    </ns2:expression>
			                </ns2:query>
			                <ns2:column xsi:type="ns2:UITableColumnType">
			                    <ns2:title xsi:type="ns2:StringPropertyType">
			                        <ns2:value>Subject</ns2:value>
			                    </ns2:title>
			                    <ns2:beFieldId>rowBE.subject</ns2:beFieldId>
			                    <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
			                </ns2:column>
			                <ns2:column xsi:type="ns2:UITableColumnType">
			                    <ns2:title xsi:type="ns2:StringPropertyType">
			                        <ns2:value>Description</ns2:value>
			                    </ns2:title>
			                    <ns2:beFieldId>rowBE.description</ns2:beFieldId>
			                    <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
			                </ns2:column>
			                <ns2:column xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:StringPropertyType">
                           <ns2:value>Party</ns2:value>
                       </ns2:title>
                       <ns2:beFieldId>rowBE.partyId</ns2:beFieldId>
                       <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
                       <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression xsi:type="ns2:ExpressionType">
                               <ns2:expressionString><![CDATA[
                               import org.shaolin.vogerp.commonmodel.ce.OrganizationType;
                               import org.shaolin.bmdp.runtime.AppContext;
                               import org.shaolin.bmdp.runtime.ce.IConstantEntity;
                               {
                               }]]></ns2:expressionString>
                           </ns2:expression>
                       </ns2:updateCondition>
                       <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression xsi:type="ns2:ExpressionType">
                                <ns2:expressionString><![CDATA[
                                import org.shaolin.bmdp.runtime.AppContext;
                                import org.shaolin.bmdp.workflow.coordinator.IResourceManager;
                                import org.shaolin.bmdp.runtime.security.UserContext;
                                {
                                 IResourceManager service = (IResourceManager)AppContext.get().getService(IResourceManager.class);
                                 return service.getResource((Long)UserContext.getUserData("CurrentUserOrgId"), rowBE.getPartyId());
                                }]]></ns2:expressionString>
                            </ns2:expression>
                        </ns2:rowExpression>
                   </ns2:column>
                   <ns2:column xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:StringPropertyType">
                           <ns2:value>Party Type</ns2:value>
                       </ns2:title>
                       <ns2:beFieldId>rowBE.partyType</ns2:beFieldId>
                       <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                       <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression xsi:type="ns2:ExpressionType">
                               <ns2:expressionString><![CDATA[
                               import org.shaolin.vogerp.commonmodel.ce.OrganizationType;
                               import org.shaolin.bmdp.runtime.AppContext;
                               import org.shaolin.bmdp.runtime.ce.IConstantEntity;
                               {
                               }]]></ns2:expressionString>
                           </ns2:expression>
                       </ns2:updateCondition>
                       <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression xsi:type="ns2:ExpressionType">
                                <ns2:expressionString><![CDATA[
                                import org.shaolin.bmdp.runtime.AppContext;
                                {
                                 return org.shaolin.bmdp.runtime.ce.CEUtil.getValue($rowBE.getPartyType());
                                }]]></ns2:expressionString>
                            </ns2:expression>
                        </ns2:rowExpression>
                   </ns2:column>
	                <ns2:column xsi:type="ns2:UITableColumnType">
	                    <ns2:title xsi:type="ns2:StringPropertyType">
	                        <ns2:value>Expired Time</ns2:value>
	                    </ns2:title>
	                    <ns2:beFieldId>rowBE.expiredTime</ns2:beFieldId>
	                    <ns2:uiType xsi:type="ns2:UITableColHTMLType">
	                      <ns2:type>HTML</ns2:type>
	                    </ns2:uiType>
	                    <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression xsi:type="ns2:ExpressionType">
                                <ns2:expressionString><![CDATA[
                                import java.lang.StringBuffer;
                                import org.shaolin.bmdp.utils.DateUtil;
                                import org.shaolin.bmdp.runtime.AppContext;
                                import org.shaolin.bmdp.workflow.be.TaskImpl;
                                {
                                    long v = DateUtil.calCountDown($rowBE.getExpiredTime());
                                    StringBuffer sb = new StringBuffer();
                                    sb.append("<div id=\"expiredTimeUI").append(index).append("\" class=\"uimastet_countdown\" value=\"");
                                    sb.append(v);
                                    sb.append("\"></div>");
                                    sb.append("<script type=\"text/javascript\">UIMaster.pageInitFunctions.push(function(){");
                                    sb.append("$(\"#expiredTimeUI").append(index).append("\").redCountdown({preset: \"flat-colors-fat\", end: ($.now() + ").append(v).append(")});");
                                    sb.append("});</script>");
                                    return sb.toString();
                                }]]></ns2:expressionString>
                            </ns2:expression>
                        </ns2:rowExpression>
                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                            <ns2:expression xsi:type="ns2:ExpressionType">
                                <ns2:expressionString><![CDATA[
                                import org.shaolin.bmdp.workflow.ce.TaskStatusType;
                                import org.shaolin.bmdp.runtime.AppContext;
                                {
                                }]]></ns2:expressionString>
                            </ns2:expression>
                        </ns2:updateCondition>
	                </ns2:column>
	                <ns2:column xsi:type="ns2:UITableColumnType">
	                    <ns2:title xsi:type="ns2:StringPropertyType">
	                        <ns2:value>Status</ns2:value>
	                    </ns2:title>
	                    <ns2:beFieldId>rowBE.status</ns2:beFieldId>
	                    <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
	                    <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
	                        <ns2:expression xsi:type="ns2:ExpressionType">
	                            <ns2:expressionString><![CDATA[
	                            import org.shaolin.bmdp.workflow.ce.TaskStatusType;
	                            import org.shaolin.bmdp.runtime.AppContext;
	                            {
	                                $rowBE.setStatus((TaskStatusType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.bmdp.workflow.ce.TaskStatusType").getByIntValue(Integer.valueOf($value).intValue()));
	                            }]]></ns2:expressionString>
	                        </ns2:expression>
	                    </ns2:updateCondition>
	                </ns2:column>
	                <ns2:defaultActions>
	                    <ns2:defaultNewAction>createTask</ns2:defaultNewAction>
	                    <ns2:defaultOpenAction>openTask</ns2:defaultOpenAction>
	                </ns2:defaultActions>
	                <ns2:actionGroup>
                       <ns2:type>radio</ns2:type>
                       <ns2:action>
                           <ns2:uiid>postponeTask</ns2:uiid>
                           <ns2:title xsi:type="ns2:StringPropertyType">
                               <ns2:value>Postpone Task</ns2:value>
                           </ns2:title>
                           <ns2:icon>ui-icon-note</ns2:icon>
                           <ns2:function>postponeTask</ns2:function>
                       </ns2:action>
                       <ns2:action>
                           <ns2:uiid>completeTask</ns2:uiid>
                           <ns2:title xsi:type="ns2:StringPropertyType">
                               <ns2:value>Complete Task</ns2:value>
                           </ns2:title>
                           <ns2:icon>ui-icon-note</ns2:icon>
                           <ns2:function>completeTask</ns2:function>
                       </ns2:action>
                       <ns2:action>
                           <ns2:uiid>cancelTask</ns2:uiid>
                           <ns2:title xsi:type="ns2:StringPropertyType">
                               <ns2:value>Cancel Task</ns2:value>
                           </ns2:title>
                           <ns2:icon>ui-icon-note</ns2:icon>
                           <ns2:function>cancelTask</ns2:function>
                       </ns2:action>
                   </ns2:actionGroup>
			            </ns2:component>
			            <ns2:layoutConstraint>
			                <ns2:componentId>tasksTable</ns2:componentId>
			                <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
			                    x="0" y="0" align="FULL"></ns2:constraint>
			            </ns2:layoutConstraint>
            </ns2:panel>
            </ns2:tab>
            <ns2:tab uiid="tasksHistoryTablePanel">
               <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
                   <ns2:bundle>org_shaolin_bmdp_workflow_i18n</ns2:bundle>
                   <ns2:key>org.shaolin.bmdp.workflow.page.TaskManager.tasksHistoryTablePanel</ns2:key>
               </ns2:title>
               <ns2:panel UIID="tasksHistoryTablePanel">
               <ns2:layout xsi:type="ns2:TableLayoutType">
                   <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                   <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
               </ns2:layout>
			            <ns2:component xsi:type="ns2:UITableType" UIID="tasksHistoryTable">
			                <ns2:beElement>org.shaolin.bmdp.workflow.be.TaskHistory</ns2:beElement>
			                <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Multiple</ns2:selectMode>
			                <ns2:defaultRowSize>10</ns2:defaultRowSize>
			                <ns2:showActionBar>true</ns2:showActionBar>
			                <ns2:showFilter>true</ns2:showFilter>
			                <ns2:query xsi:type="ns2:ExpressionPropertyType">
			                    <ns2:expression xsi:type="ns2:ExpressionType">
			                        <ns2:expressionString><![CDATA[
			                        import java.util.List;
			                        import org.shaolin.uimaster.page.ajax.TableConditions;
			                        import org.shaolin.bmdp.workflow.be.TaskHistoryImpl;
			                        import org.shaolin.bmdp.runtime.AppContext;
			                        import org.shaolin.bmdp.workflow.dao.CoordinatorModel;
			                        import org.shaolin.bmdp.runtime.security.UserContext;
			                        {
			                              if ($tableCondition == null) {
			                                 $tableCondition = TableConditions.createCondition(new TaskHistoryImpl());
			                                 $tableCondition.setCount(10);
			                              }
			                              TaskHistoryImpl condition = (TaskHistoryImpl)$tableCondition.getCondition();
			                              condition.setOrgId((Long)UserContext.getUserData(UserContext.CURRENT_USER_ORGID));
			                              return CoordinatorModel.INSTANCE.searchTasksHistory(condition, null, 0, -1);
			                        }]]></ns2:expressionString>
			                    </ns2:expression>
			                </ns2:query>
			                <ns2:column xsi:type="ns2:UITableColumnType">
			                    <ns2:title xsi:type="ns2:StringPropertyType">
			                        <ns2:value>Subject</ns2:value>
			                    </ns2:title>
			                    <ns2:beFieldId>rowBE.subject</ns2:beFieldId>
			                    <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
			                </ns2:column>
			                <ns2:column xsi:type="ns2:UITableColumnType">
			                    <ns2:title xsi:type="ns2:StringPropertyType">
			                        <ns2:value>Description</ns2:value>
			                    </ns2:title>
			                    <ns2:beFieldId>rowBE.description</ns2:beFieldId>
			                    <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
			                </ns2:column>
			                <ns2:column xsi:type="ns2:UITableColumnType">
			                    <ns2:title xsi:type="ns2:StringPropertyType">
			                        <ns2:value>Trigger Time</ns2:value>
			                    </ns2:title>
			                    <ns2:beFieldId>rowBE.expiredTime</ns2:beFieldId>
			                    <ns2:uiType xsi:type="ns2:UITableColHTMLType">
			                      <ns2:type>DateRange</ns2:type>
			                      <ns2:startCondition>rowBE.expiredTimeStart</ns2:startCondition> 
			                      <ns2:endCondition>rowBE.expiredTimeEnd</ns2:endCondition>
			                    </ns2:uiType>
			                    <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
			                        <ns2:expression xsi:type="ns2:ExpressionType">
			                            <ns2:expressionString><![CDATA[
			                            import org.shaolin.uimaster.page.od.formats.FormatUtil;
			                            import java.util.Date;
			                            {
			                                if ($value == null || "".equals($value)) {
			                                    if ("rowBE.expiredTimeStart".equals($filterId)) {
			                                        $rowBE.setExpiredTimeStart(null);
			                                    } else {
			                                        $rowBE.setExpiredTimeEnd(null);
			                                    }
			                                } else {
			                                    Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
			                                    if ("rowBE.expiredTimeStart".equals($filterId)) {
			                                        $rowBE.setExpiredTimeStart(d);
			                                    } else {
			                                        $rowBE.setExpiredTimeEnd(d);
			                                    }
			                                }
			                            }]]></ns2:expressionString>
			                        </ns2:expression>
			                    </ns2:updateCondition>
			                </ns2:column>
			                <ns2:column xsi:type="ns2:UITableColumnType">
			                    <ns2:title xsi:type="ns2:StringPropertyType">
			                        <ns2:value>Status</ns2:value>
			                    </ns2:title>
			                    <ns2:beFieldId>rowBE.status</ns2:beFieldId>
			                    <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
			                    <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
			                        <ns2:expression xsi:type="ns2:ExpressionType">
			                            <ns2:expressionString><![CDATA[
			                            import org.shaolin.bmdp.workflow.ce.TaskStatusType;
			                            import org.shaolin.bmdp.runtime.AppContext;
			                            {
			                                $rowBE.setStatus((TaskStatusType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.bmdp.workflow.ce.TaskStatusType").getByIntValue(Integer.valueOf($value).intValue()));
			                            }]]></ns2:expressionString>
			                        </ns2:expression>
			                    </ns2:updateCondition>
			                </ns2:column>
			                <ns2:defaultActions>
			                    <ns2:defaultNewAction>createTask</ns2:defaultNewAction>
			                    <ns2:defaultOpenAction>openTask</ns2:defaultOpenAction>
			                </ns2:defaultActions>
			            </ns2:component>
			            <ns2:layoutConstraint>
			                <ns2:componentId>tasksHistoryTable</ns2:componentId>
			                <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
			                    x="0" y="0" align="FULL"></ns2:constraint>
			            </ns2:layoutConstraint>
            </ns2:panel>
            </ns2:tab>
            <ns2:tab uiid="tasksAnalysisPanel">
              <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
                  <ns2:bundle>org_shaolin_bmdp_workflow_i18n</ns2:bundle>
                  <ns2:key>org.shaolin.bmdp.workflow.page.TaskManager.tasksAnalysis</ns2:key>
              </ns2:title>
              <ns2:panel UIID="tasksAnalysisPanel">
              <ns2:layout xsi:type="ns2:TableLayoutType">
                  <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                  <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                  <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
              </ns2:layout>
              <ns2:component xsi:type="ns2:UIPanelType" UIID="firstPanel">
                 <ns2:layout xsi:type="ns2:TableLayoutType">
                     <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                     <ns2:columnWidthWeight>0.15</ns2:columnWidthWeight>
                     <ns2:columnWidthWeight>0.15</ns2:columnWidthWeight>
                 </ns2:layout>
                 <ns2:component xsi:type="ns2:UIChartPieType" UIID="currentTasksPie">
                  <ns2:Property name="width">
			         <ns2:value xsi:type="ns2:NumericPropertyType">
			            <value>250</value>
			         </ns2:value>
		          </ns2:Property>
		          <ns2:Property name="height">
                    <ns2:value xsi:type="ns2:NumericPropertyType">
                       <value>250</value>
                    </ns2:value>
                  </ns2:Property>
                  <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
                      <ns2:value>Current Tasks Distribution</ns2:value>
                  </ns2:widgetLabel>
                  <ns2:beElement>org.shaolin.bmdp.workflow.be.Task</ns2:beElement>
                  <ns2:query xsi:type="ns2:ExpressionPropertyType">
                       <ns2:expression xsi:type="ns2:ExpressionType">
                           <ns2:expressionString><![CDATA[
                           import java.util.List;
                           import java.util.HashMap;
                           import org.shaolin.uimaster.page.ajax.TableConditions;
                           import org.shaolin.bmdp.workflow.ce.TaskStatusType;
                           import org.shaolin.bmdp.runtime.AppContext;
                           import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                           {
                               HashMap list = new HashMap();
                               ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
                               list.put(TaskStatusType.INPROGRESS.getDisplayName(), new Integer(service.getTasks(TaskStatusType.INPROGRESS).size()));
                               list.put(TaskStatusType.EXPIRED.getDisplayName(), new Integer(service.getTasks(TaskStatusType.EXPIRED).size()));
                               
                               return list;
                           }]]></ns2:expressionString>
                       </ns2:expression>
                   </ns2:query>
                  <ns2:dataset xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression>
                             <expressionString>{return org.shaolin.bmdp.workflow.ce.TaskStatusType.INPROGRESS.getDisplayName();}</expressionString>
                           </ns2:expression>
                       </ns2:title>
                       <ns2:cssStype>'#46BFBD'</ns2:cssStype>
                       <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                   </ns2:dataset>
                   <ns2:dataset xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression>
                             <expressionString>{return org.shaolin.bmdp.workflow.ce.TaskStatusType.EXPIRED.getDisplayName();}</expressionString>
                           </ns2:expression>
                       </ns2:title>
                       <ns2:cssStype>'#F7464A'</ns2:cssStype>
                       <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                   </ns2:dataset>
              </ns2:component>
              <ns2:component xsi:type="ns2:UIChartPieType" UIID="historyTasksPie">
                  <ns2:Property name="width">
                    <ns2:value xsi:type="ns2:NumericPropertyType">
                       <value>250</value>
                    </ns2:value>
                  </ns2:Property>
                  <ns2:Property name="height">
                    <ns2:value xsi:type="ns2:NumericPropertyType">
                       <value>250</value>
                    </ns2:value>
                  </ns2:Property>
                  <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
                      <ns2:value>History Tasks Distribution</ns2:value>
                  </ns2:widgetLabel>
                  <ns2:beElement>org.shaolin.bmdp.workflow.be.Task</ns2:beElement>
                  <ns2:query xsi:type="ns2:ExpressionPropertyType">
                       <ns2:expression xsi:type="ns2:ExpressionType">
                           <ns2:expressionString><![CDATA[
                           import java.util.List;
                           import java.util.HashMap;
                           import org.shaolin.uimaster.page.ajax.TableConditions;
                           import org.shaolin.bmdp.workflow.ce.TaskStatusType;
                           import org.shaolin.bmdp.runtime.AppContext;
                           import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                           {
                               HashMap list = new HashMap();
                               ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
                               list.put(TaskStatusType.INPROGRESS.getDisplayName(), new Integer(service.getTasks(TaskStatusType.INPROGRESS).size()));
                               list.put(TaskStatusType.EXPIRED.getDisplayName(), new Integer(service.getTasks(TaskStatusType.EXPIRED).size()));
                               
                               return list;
                           }]]></ns2:expressionString>
                       </ns2:expression>
                   </ns2:query>
                  <ns2:dataset xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression>
                             <expressionString>{return org.shaolin.bmdp.workflow.ce.TaskStatusType.INPROGRESS.getDisplayName();}</expressionString>
                           </ns2:expression>
                       </ns2:title>
                       <ns2:cssStype>'#46BFBD'</ns2:cssStype>
                       <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                   </ns2:dataset>
                   <ns2:dataset xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression>
                             <expressionString>{return org.shaolin.bmdp.workflow.ce.TaskStatusType.EXPIRED.getDisplayName();}</expressionString>
                           </ns2:expression>
                       </ns2:title>
                       <ns2:cssStype>'#F7464A'</ns2:cssStype>
                       <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                   </ns2:dataset>
                 </ns2:component>
                 <ns2:layoutConstraint>
                     <ns2:componentId>currentTasksPie</ns2:componentId>
                     <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                         x="0" y="0" align="FULL"></ns2:constraint>
                 </ns2:layoutConstraint>
                 <ns2:layoutConstraint>
                     <ns2:componentId>historyTasksPie</ns2:componentId>
                     <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                         x="1" y="0" align="FULL"></ns2:constraint>
                 </ns2:layoutConstraint>
              </ns2:component>
              <ns2:component xsi:type="ns2:UIChartLinearType" UIID="historyTasksRadar">
                  <ns2:Property name="width">
                    <ns2:value xsi:type="ns2:NumericPropertyType">
                       <value>600</value>
                    </ns2:value>
                  </ns2:Property>
                  <ns2:Property name="height">
                    <ns2:value xsi:type="ns2:NumericPropertyType">
                       <value>400</value>
                    </ns2:value>
                  </ns2:Property>
                  <ns2:Property name="dataType">
                    <ns2:value xsi:type="ns2:StringPropertyType">
                       <value>date</value>
                    </ns2:value>
                  </ns2:Property>
                  <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
                      <ns2:value>History Tasks Distribution</ns2:value>
                  </ns2:widgetLabel>
                  <ns2:beElement>org.shaolin.bmdp.workflow.be.Task</ns2:beElement>
                  <ns2:query xsi:type="ns2:ExpressionPropertyType">
                       <ns2:expression xsi:type="ns2:ExpressionType">
                           <ns2:expressionString><![CDATA[
                           import java.util.List;
                           import java.util.ArrayList;
                           import org.shaolin.uimaster.page.ajax.TableConditions;
                           import org.shaolin.bmdp.workflow.ce.TaskStatusType;
                           import org.shaolin.bmdp.runtime.AppContext;
                           import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                           {
                               ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
                               return service.getAllTasks();
                           }]]></ns2:expressionString>
                       </ns2:expression>
                   </ns2:query>
                  <ns2:dataset xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression>
                             <expressionString>{return org.shaolin.bmdp.workflow.ce.TaskStatusType.INPROGRESS.getDisplayName();}</expressionString>
                           </ns2:expression>
                       </ns2:title>
                       <ns2:cssStype>backgroundColor: 'rgba(220,220,220,0.2)',pointBackgroundColor: 'rgba(220,220,220,1)',hoverPointBackgroundColor: 'rgba(220,220,220,1)',pointHighlightStroke: '#fff'</ns2:cssStype>
                       <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                       <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression xsi:type="ns2:ExpressionType">
                                <ns2:expressionString><![CDATA[
                                import org.shaolin.bmdp.runtime.AppContext;
                                {
                                 return "{x: \"2015-11-28\", y: " +(int)(java.lang.Math.random() * 100) + "}";
                                }]]></ns2:expressionString>
                            </ns2:expression>
                        </ns2:rowExpression>
                   </ns2:dataset>
                   <ns2:dataset xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression>
                             <expressionString>{return org.shaolin.bmdp.workflow.ce.TaskStatusType.EXPIRED.getDisplayName();}</expressionString>
                           </ns2:expression>
                       </ns2:title>
                       <ns2:cssStype>backgroundColor: 'rgba(151,187,205,0.2)',pointBackgroundColor: 'rgba(151,187,205,1)',hoverPointBackgroundColor: 'rgba(151,187,205,1)',pointHighlightStroke: '#fff'</ns2:cssStype>
                       <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                       <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                           <ns2:expression xsi:type="ns2:ExpressionType">
                                <ns2:expressionString><![CDATA[
                                import org.shaolin.bmdp.runtime.AppContext;
                                {
                                  return "{x: \"2015-11-28\", y: " +(int)(java.lang.Math.random() * 100) + "}";
                                }]]></ns2:expressionString>
                            </ns2:expression>
                        </ns2:rowExpression>
                   </ns2:dataset>
              </ns2:component>
               <ns2:layoutConstraint>
                   <ns2:componentId>firstPanel</ns2:componentId>
                   <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                       x="0" y="0" align="FULL"></ns2:constraint>
               </ns2:layoutConstraint>
               <ns2:layoutConstraint>
                  <ns2:componentId>historyTasksRadar</ns2:componentId>
                  <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                      x="0" y="1" align="FULL"></ns2:constraint>
               </ns2:layoutConstraint>
            </ns2:panel>
            </ns2:tab>
             <ns2:tab uiid="serverNodePanel">
               <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
                   <ns2:bundle>org_shaolin_bmdp_workflow_i18n</ns2:bundle>
                   <ns2:key>org.shaolin.bmdp.workflow.page.TaskManager.serverNodePanel</ns2:key>
               </ns2:title>
               <ns2:panel UIID="serverNodePanel">
               <ns2:layout xsi:type="ns2:TableLayoutType">
                   <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                   <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
               </ns2:layout>
               <ns2:component xsi:type="ns2:UITableType" UIID="serverNodeTable">
                   <ns2:beElement>org.shaolin.bmdp.workflow.be.ServerNodeInfo</ns2:beElement>
                   <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                   <ns2:defaultRowSize>10</ns2:defaultRowSize>
                   <ns2:showActionBar>true</ns2:showActionBar>
                   <ns2:showFilter>true</ns2:showFilter>
                   <ns2:query xsi:type="ns2:ExpressionPropertyType">
                       <ns2:expression xsi:type="ns2:ExpressionType">
                           <ns2:expressionString><![CDATA[
                           import java.util.List;
                           import org.shaolin.uimaster.page.ajax.TableConditions;
                           import org.shaolin.bmdp.workflow.be.ServerNodeInfoImpl;
                           import org.shaolin.bmdp.runtime.AppContext;
                           import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                           import org.shaolin.bmdp.workflow.dao.CoordinatorModel;
                           {
                                 if ($tableCondition == null) {
                                    $tableCondition = TableConditions.createCondition(new ServerNodeInfoImpl());
                                    $tableCondition.setCount(10);
                                 }
                                 ServerNodeInfoImpl condition0 = (ServerNodeInfoImpl)$tableCondition.getCondition();
                                 return CoordinatorModel.INSTANCE.searchServerNodes(condition0, null, 0, -1);
                           }]]></ns2:expressionString>
                       </ns2:expression>
                   </ns2:query>
                   <ns2:column xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:StringPropertyType">
                           <ns2:value>Protocol</ns2:value>
                       </ns2:title>
                       <ns2:beFieldId>rowBE.protocol</ns2:beFieldId>
                       <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                   </ns2:column>
                   <ns2:column xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:StringPropertyType">
                           <ns2:value>IP Address</ns2:value>
                       </ns2:title>
                       <ns2:beFieldId>rowBE.ipAddress</ns2:beFieldId>
                       <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                   </ns2:column>
                   <ns2:column xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:StringPropertyType">
                           <ns2:value>Port</ns2:value>
                       </ns2:title>
                       <ns2:beFieldId>rowBE.port</ns2:beFieldId>
                       <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                   </ns2:column>
                   <ns2:column xsi:type="ns2:UITableColumnType">
                       <ns2:title xsi:type="ns2:StringPropertyType">
                           <ns2:value>Domain</ns2:value>
                       </ns2:title>
                       <ns2:beFieldId>rowBE.domain</ns2:beFieldId>
                       <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                   </ns2:column>
             <ns2:defaultActions>
                 <ns2:defaultNewAction>createServerNode</ns2:defaultNewAction>
                 <ns2:defaultOpenAction>openServerNode</ns2:defaultOpenAction>
             </ns2:defaultActions>
               </ns2:component>
               <ns2:layoutConstraint>
                   <ns2:componentId>serverNodeTable</ns2:componentId>
                   <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                       x="0" y="0" align="FULL"></ns2:constraint>
               </ns2:layoutConstraint>
            </ns2:panel>
            </ns2:tab>
        </ns2:component>
        <ns2:layoutConstraint>
            <ns2:componentId>functionsTab</ns2:componentId>
            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                x="0" y="0" align="FULL"></ns2:constraint>
        </ns2:layoutConstraint>
    </ns2:body>
    </ns2:UIEntity>
	<ns2:ODMapping>
		<ns2:DataEntity category="JavaClass" name="workflowName" scope="Internal">
			<ns2:type entityName="java.lang.String" />
			<ns2:default><ns2:expressionString><![CDATA["t"]]></ns2:expressionString></ns2:default>
		</ns2:DataEntity>
		<ns2:DataEntity category="JavaPrimitive" name="workflowId" scope="Internal">
			<ns2:type entityName="long" />
			<ns2:default><ns2:expressionString><![CDATA[-1]]></ns2:expressionString></ns2:default>
		</ns2:DataEntity>
	</ns2:ODMapping>
</ns2:UIPage>
