<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.bmdp.workflow.form.NotificationBoard</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="cleanup">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <expressionString><![CDATA[
        { 
          this.msgCounter = 0;
          this.realCounter.text("");
          $(this.messagePanel).children().each(function(){
             $(this).remove();
          });
        
        }]]></expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cleanup-201506102211">
        <ns2:exp>
            <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.commonmodel.IUserService;
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
        import org.shaolin.bmdp.runtime.spi.IServerServiceManager;
        import org.shaolin.bmdp.runtime.security.UserContext;
        { 
            ICoordinatorService service = (ICoordinatorService)
                IServerServiceManager.INSTANCE.getService(ICoordinatorService.class);
            service.cleanAllNotifications((Long)UserContext.getUserData("CurrentUserId"));
        }
        ]]></expressionString>
        </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="serverURLUI">
       <ns2:Property name="value">
           <ns2:value xsi:type="ns2:ExpressionPropertyType">
	         <ns2:expression>
	           <expressionString><![CDATA[
	           import org.shaolin.bmdp.runtime.Registry;
	           { 
	               Registry instance = Registry.getInstance();
	               return instance.getValue("/System/webConstant/websocketServer"); 
	           }]]></expressionString>
	         </ns2:expression>
           </ns2:value>
        </ns2:Property>
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="sentPartyIdUI">
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="countUIId">
    </ns2:component>
    <ns2:component xsi:type="ns2:UIHiddenType" UIID="skipLoadSIOjsUI">
    </ns2:component>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIPanelType" UIID="messagePanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="cleanupBtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="cleanup"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:StringPropertyType">
          <ns2:value>清空通知</ns2:value>
        </ns2:text>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>messagePanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>cleanupBtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
       var partyId = this.sentPartyIdUI.value;
       var msgContainer = this.messagePanel;
       var countUIId = this.countUIId.value;
       this.msgCounter = 0;
       if (IS_MOBILEVIEW) {
          this.realCounter = $("<span style='color:blue;font-weight:bold;margin-left:-25px;'></span>");
       } else {
          this.realCounter = $("<span style='color:blue;font-weight:bold;margin-left:-55px;'></span>");
       }
       $("#"+countUIId).append(this.realCounter);
       var o = this;
       if (this.skipLoadSIOjsUI.value != "true") {
       	  UIMaster.require("/js/socket.io.js");
       }
       o.nodesocket = io.connect(o.serverURLUI.value);
       o.nodesocket.on('connect', function(e) {
            var msg = {partyId: partyId};
            o.nodesocket.emit('register', msg);
       });
       o.nodesocket.on('loginSuccess', function(e) {
            var msg = {partyId: partyId};
            o.nodesocket.emit('notifihistory', msg);
       });
       o.nodesocket.on('notifyFrom', function(e) {
            for (var i=0;i<e.length;i++) {
	            var row = "<div class=\"uimaster_noti_item "+((i%2==0)?"uimaster_chat_item_even":"uimaster_chat_item_old")+"\"><div><div class=\"uimaster_chat_time\">"
					 + e[i].CREATEDATE + "</div><div class=\"uimaster_chat_message\"> " + e[i].DESCRIPTION + "</div></div></div>"
	            $(row).appendTo(msgContainer);
            }
            o.msgCounter = o.msgCounter + e.length;
            o.realCounter.text("("+o.msgCounter+")");
       });
    ]]>
    </ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.bmdp.workflow.be.Notification"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="skipLoadSIOjs" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="countUIId" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UITextWithNumber"></ns2:mappingRule>
      <ns2:UIComponent componentPath="sentPartyIdUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.partyId" paramName="Number"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping1">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="countUIId" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="countUIId" paramName="StringData"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping1">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="skipLoadSIOjsUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="skipLoadSIOjs" paramName="StringData"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>