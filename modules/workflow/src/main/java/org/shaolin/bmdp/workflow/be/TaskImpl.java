/*
 *
 * This file is automatically generated on Fri Mar 11 20:52:26 CST 2016
 */

    
package org.shaolin.bmdp.workflow.be;
        
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;

import org.shaolin.bmdp.datamodel.bediagram.*;
import org.shaolin.bmdp.datamodel.common.*;
import org.shaolin.bmdp.runtime.be.IBusinessEntity;
import org.shaolin.bmdp.runtime.be.IExtensibleEntity;
import org.shaolin.bmdp.runtime.be.IPersistentEntity;
import org.shaolin.bmdp.runtime.be.IHistoryEntity;
import org.shaolin.bmdp.runtime.be.ITaskEntity;
import org.shaolin.bmdp.runtime.be.BEExtensionInfo;

import org.shaolin.bmdp.runtime.spi.IConstantService;

import org.shaolin.bmdp.runtime.AppContext;

import org.shaolin.bmdp.runtime.ce.CEUtil;

import org.shaolin.bmdp.workflow.ce.*;


/**
 * null
 * 
 * This code is generated automatically, any change will be replaced after rebuild.
 * 
 *
 */

public class TaskImpl  implements org.shaolin.bmdp.workflow.be.ITask
{
    private static final long serialVersionUID = 0x90B1123CE87B50FFL;

    private final transient IConstantService ceService = AppContext.get().getConstantService();

    protected String getBusinessEntityName()
    {
        return "org.shaolin.bmdp.workflow.be.Task";
    }

    public TaskImpl()
    {
        
        _extField = new BEExtensionInfo();
        
    }
    
    
        /**
     * Create Date
     */
    private java.util.Date createDate = null;

    /**
     * Enable record
     */
    private boolean _enable = true;

    /**
     *  set orgId
     *  @parameter orgId.
     */
    private long orgId = 0;


    /**
     *  BEExtension _extType
     */
    protected String _extType;

    /**
     *  BEExtension _extField
     */
    protected BEExtensionInfo _extField;
        
   /**
     *  help is not available
     */    
    protected long id;
    
   /**
     *  help is not available
     */    
    protected long partyId;
    
   /**
     *  help is not available
     */    
    protected java.lang.String partyType;
    
   /**
     *  help is not available
     */    
    protected java.lang.String sessionId;
    
   /**
     *  help is not available
     */    
    protected byte[] flowState;
    
   /**
     *  help is not available
     */    
    protected java.lang.String subject;
    
   /**
     *  help is not available
     */    
    protected java.lang.String description;
    
   /**
     *  help is not available
     */    
    protected java.lang.String comments;
    
   /**
     *  help is not available
     */    
    protected java.util.Date createTime;
    
   /**
     *  help is not available
     */    
    protected java.util.Date expiredTime;
    
   /**
     *  help is not available
     */    
    protected java.util.Date expiredTimeStart;
    
   /**
     *  help is not available
     */    
    protected java.util.Date expiredTimeEnd;
    
   /**
     *  help is not available
     */    
    protected boolean sendSMS;
    
   /**
     *  help is not available
     */    
    protected boolean sendEmail;
    
   /**
     *  help is not available
     */    
    protected java.lang.Runnable periodicJob;
    
   /**
     *  help is not available
     */    
    protected long periodicValue;
    
   /**
     *  help is not available
     */    
    protected PeriodicType periodicType = PeriodicType.NOT_SPECIFIED;
    
    protected int periodicTypeInt = PeriodicType.NOT_SPECIFIED.getIntValue();
    
   /**
     *  help is not available
     */    
    protected TaskStatusType status = TaskStatusType.NOT_SPECIFIED;
    
    protected int statusInt = TaskStatusType.NOT_SPECIFIED.getIntValue();
    
   /**
     *  help is not available
     */    
    protected int completeRate;
    
   /**
     *  help is not available
     */    
    protected TaskPriorityType priority = TaskPriorityType.NOT_SPECIFIED;
    
    protected int priorityInt = TaskPriorityType.NOT_SPECIFIED.getIntValue();
    
   /**
     *  help is not available
     */    
    protected java.lang.Object listener;
    
        /**
     *  Get createDate
     *
     *  @return java.util.Date
     */
    public java.util.Date getCreateDate() {
        return createDate;
    }
            /**
     *  Is enable
     *
     *  @return boolean
     */
    public boolean isEnabled() {
        return _enable;
    }
            /**
     *  Is enable
     *
     *  @return boolean
     */
    private boolean get_enable() {
        return _enable;
    }
            /**
     *  get orgId
     */
    public long getOrgId() {
        return this.orgId;
    }

    
    /**
     *  get _extType
     *
     *  @return _extType
     */
    public String get_extType() {
        return _extType;
    }

    /**
     *  get _extField
     *
     *  @return _extField
     */
    public BEExtensionInfo get_extField() {
        return _extField;
    }
        
    /**
     *  get id
     *
     *  @return id
     */
    public long getId() {
        return id;
    }

    /**
     *  get partyId
     *
     *  @return partyId
     */
    public long getPartyId() {
        return partyId;
    }

    /**
     *  get partyType
     *
     *  @return partyType
     */
    public java.lang.String getPartyType() {
        return partyType;
    }

    /**
     *  get sessionId
     *
     *  @return sessionId
     */
    public java.lang.String getSessionId() {
        return sessionId;
    }

    /**
     *  get flowState
     *
     *  @return flowState
     */
    public byte[] getFlowState() {
        return flowState;
    }

    /**
     *  get subject
     *
     *  @return subject
     */
    public java.lang.String getSubject() {
        return subject;
    }

    /**
     *  get description
     *
     *  @return description
     */
    public java.lang.String getDescription() {
        return description;
    }

    /**
     *  get comments
     *
     *  @return comments
     */
    public java.lang.String getComments() {
        return comments;
    }

    /**
     *  get createTime
     *
     *  @return createTime
     */
    public java.util.Date getCreateTime() {
        return createTime;
    }

    /**
     *  get expiredTime
     *
     *  @return expiredTime
     */
    public java.util.Date getExpiredTime() {
        return expiredTime;
    }

    /**
     *  get expiredTimeStart
     *
     *  @return expiredTimeStart
     */
    public java.util.Date getExpiredTimeStart() {
        return expiredTimeStart;
    }

    /**
     *  get expiredTimeEnd
     *
     *  @return expiredTimeEnd
     */
    public java.util.Date getExpiredTimeEnd() {
        return expiredTimeEnd;
    }

    /**
     *  get sendSMS
     *
     *  @return sendSMS
     */
    public boolean getSendSMS() {
        return sendSMS;
    }

    /**
     *  get sendEmail
     *
     *  @return sendEmail
     */
    public boolean getSendEmail() {
        return sendEmail;
    }

    /**
     *  get periodicJob
     *
     *  @return periodicJob
     */
    public java.lang.Runnable getPeriodicJob() {
        return periodicJob;
    }

    /**
     *  get periodicValue
     *
     *  @return periodicValue
     */
    public long getPeriodicValue() {
        return periodicValue;
    }

    /**
     *  get periodicType
     *
     *  @return periodicType
     */
    public PeriodicType getPeriodicType() {
        return periodicType;
    }

    /**
     *  get periodicTypeInt
     *
     *  @return periodicTypeInt
     */
    private int getPeriodicTypeInt() {
        return periodicTypeInt;
    }

    /**
     *  get status
     *
     *  @return status
     */
    public TaskStatusType getStatus() {
        return status;
    }

    /**
     *  get statusInt
     *
     *  @return statusInt
     */
    private int getStatusInt() {
        return statusInt;
    }

    /**
     *  get completeRate
     *
     *  @return completeRate
     */
    public int getCompleteRate() {
        return completeRate;
    }

    /**
     *  get priority
     *
     *  @return priority
     */
    public TaskPriorityType getPriority() {
        return priority;
    }

    /**
     *  get priorityInt
     *
     *  @return priorityInt
     */
    private int getPriorityInt() {
        return priorityInt;
    }

    /**
     *  get listener
     *
     *  @return listener
     */
    public java.lang.Object getListener() {
        return listener;
    }

        /**
     *  set createDate
     *  @parameter true or false.
     */
    public void setCreateDate(java.util.Date createDate) {
        this.createDate = createDate;
    }

        /**
     *  set enable
     *  @parameter true or false.
     */
    public void setEnabled(boolean enable) {
        _enable = enable;
    }

        /**
     *  set enable
     *  @parameter true or false.
     */
    private void set_enable(boolean enable) {
        _enable = enable;
    }

        /**
     *  set orgId
     *  @parameter orgId.
     */
    public void setOrgId(long orgId) {
        this.orgId = orgId;
    }

    /**
     *  set _extType
     *  @param _extType which is the extension type of be object.
     */
    public void set_extType(java.lang.String _extType) {
        this._extType = _extType;
    }
        
    /**
     *  set id
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     *  set partyId
     */
    public void setPartyId(long partyId) {
        this.partyId = partyId;
    }

    /**
     *  set partyType
     */
    public void setPartyType(java.lang.String partyType) {
        this.partyType = partyType;
    }

    /**
     *  set sessionId
     */
    public void setSessionId(java.lang.String sessionId) {
        this.sessionId = sessionId;
    }

    /**
     *  set flowState
     */
    public void setFlowState(byte[] flowState) {
        this.flowState = flowState;
    }

    /**
     *  set subject
     */
    public void setSubject(java.lang.String subject) {
        this.subject = subject;
    }

    /**
     *  set description
     */
    public void setDescription(java.lang.String description) {
        this.description = description;
    }

    /**
     *  set comments
     */
    public void setComments(java.lang.String comments) {
        this.comments = comments;
    }

    /**
     *  set createTime
     */
    public void setCreateTime(java.util.Date createTime) {
        this.createTime = createTime;
    }

    /**
     *  set expiredTime
     */
    public void setExpiredTime(java.util.Date expiredTime) {
        this.expiredTime = expiredTime;
    }

    /**
     *  set expiredTimeStart
     */
    public void setExpiredTimeStart(java.util.Date expiredTimeStart) {
        this.expiredTimeStart = expiredTimeStart;
    }

    /**
     *  set expiredTimeEnd
     */
    public void setExpiredTimeEnd(java.util.Date expiredTimeEnd) {
        this.expiredTimeEnd = expiredTimeEnd;
    }

    /**
     *  set sendSMS
     */
    public void setSendSMS(boolean sendSMS) {
        this.sendSMS = sendSMS;
    }

    /**
     *  set sendEmail
     */
    public void setSendEmail(boolean sendEmail) {
        this.sendEmail = sendEmail;
    }

    /**
     *  set periodicJob
     */
    public void setPeriodicJob(java.lang.Runnable periodicJob) {
        this.periodicJob = periodicJob;
    }

    /**
     *  set periodicValue
     */
    public void setPeriodicValue(long periodicValue) {
        this.periodicValue = periodicValue;
    }

    /**
     *  set periodicType
     */
    public void setPeriodicType(PeriodicType periodicType) {
        this.periodicType = periodicType;
    if (periodicTypeInt != periodicType.getIntValue()) {
            periodicTypeInt = periodicType.getIntValue();
        }
    }

    /**
     *  set int periodicType
     */
    private void setPeriodicTypeInt(int intValue) {
        this.periodicTypeInt = intValue;
        if (periodicTypeInt != periodicType.getIntValue()) {
            periodicType = (PeriodicType)ceService.getConstantEntity(PeriodicType.ENTITY_NAME).getByIntValue(periodicTypeInt);
        }
    }

    /**
     *  set status
     */
    public void setStatus(TaskStatusType status) {
        this.status = status;
    if (statusInt != status.getIntValue()) {
            statusInt = status.getIntValue();
        }
    }

    /**
     *  set int status
     */
    private void setStatusInt(int intValue) {
        this.statusInt = intValue;
        if (statusInt != status.getIntValue()) {
            status = (TaskStatusType)ceService.getConstantEntity(TaskStatusType.ENTITY_NAME).getByIntValue(statusInt);
        }
    }

    /**
     *  set completeRate
     */
    public void setCompleteRate(int completeRate) {
        this.completeRate = completeRate;
    }

    /**
     *  set priority
     */
    public void setPriority(TaskPriorityType priority) {
        this.priority = priority;
    if (priorityInt != priority.getIntValue()) {
            priorityInt = priority.getIntValue();
        }
    }

    /**
     *  set int priority
     */
    private void setPriorityInt(int intValue) {
        this.priorityInt = intValue;
        if (priorityInt != priority.getIntValue()) {
            priority = (TaskPriorityType)ceService.getConstantEntity(TaskPriorityType.ENTITY_NAME).getByIntValue(priorityInt);
        }
    }

    /**
     *  set listener
     */
    public void setListener(java.lang.Object listener) {
        this.listener = listener;
    }

    
    /**
     * Check different according to primary key.
     */
    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof org.shaolin.bmdp.workflow.be.TaskImpl))
            return false;
        org.shaolin.bmdp.workflow.be.TaskImpl o = (org.shaolin.bmdp.workflow.be.TaskImpl)obj;
        
        boolean result = super.equals(obj);

        boolean eq = true;
        
        return result;
    }

    /**
     * Generate hashCode according to primary key.
     */
    public int hashCode() {
        
        int result = super.hashCode();

        return result;
    }
        
    
     /**
     * Gets the String format of the business entity.
     *
     * @return String the business entity in String format.
     */
    public  String  toString() {
        StringBuffer aBuf = new StringBuffer();
        aBuf.append("org.shaolin.bmdp.workflow.be.Task");
    
        aBuf.append(" : ");
        
        aBuf.append("createDate=").append(createDate).append(", ");
        
        aBuf.append("orgId=").append(orgId);
        
        aBuf.append("enable=").append(_enable).append(", ");
        
        aBuf.append("id");
        aBuf.append("=");
        aBuf.append(id);
        aBuf.append(", ");
        
        aBuf.append("partyId");
        aBuf.append("=");
        aBuf.append(partyId);
        aBuf.append(", ");
        
        aBuf.append("partyType");
        aBuf.append("=");
        aBuf.append(partyType);
        aBuf.append(", ");
        
        aBuf.append("sessionId");
        aBuf.append("=");
        aBuf.append(sessionId);
        aBuf.append(", ");
        
        aBuf.append("subject");
        aBuf.append("=");
        aBuf.append(subject);
        aBuf.append(", ");
        
        aBuf.append("description");
        aBuf.append("=");
        aBuf.append(description);
        aBuf.append(", ");
        
        aBuf.append("comments");
        aBuf.append("=");
        aBuf.append(comments);
        aBuf.append(", ");
        
        aBuf.append("createTime");
        aBuf.append("=");
        aBuf.append(createTime);
        aBuf.append(", ");
        
        aBuf.append("expiredTime");
        aBuf.append("=");
        aBuf.append(expiredTime);
        aBuf.append(", ");
        
        aBuf.append("expiredTimeStart");
        aBuf.append("=");
        aBuf.append(expiredTimeStart);
        aBuf.append(", ");
        
        aBuf.append("expiredTimeEnd");
        aBuf.append("=");
        aBuf.append(expiredTimeEnd);
        aBuf.append(", ");
        
        aBuf.append("sendSMS");
        aBuf.append("=");
        aBuf.append(sendSMS);
        aBuf.append(", ");
        
        aBuf.append("sendEmail");
        aBuf.append("=");
        aBuf.append(sendEmail);
        aBuf.append(", ");
        
        aBuf.append("periodicValue");
        aBuf.append("=");
        aBuf.append(periodicValue);
        aBuf.append(", ");
        
        aBuf.append("periodicType");
        aBuf.append("=");
        aBuf.append(periodicType);
        aBuf.append(", ");
        
        aBuf.append("status");
        aBuf.append("=");
        aBuf.append(status);
        aBuf.append(", ");
        
        aBuf.append("completeRate");
        aBuf.append("=");
        aBuf.append(completeRate);
        aBuf.append(", ");
        
        aBuf.append("priority");
        aBuf.append("=");
        aBuf.append(priority);
        aBuf.append(", ");
        
        return aBuf.toString();
    }
    
    
     /**
     * Gets list of MemberType.
     *
     * @return List     the list of MemberType.
     */
    public List<MemberType> getMemberList() {
        List<MemberType> memberTypeList = new ArrayList<MemberType>();
        
        MemberType member = null;
        
        org.shaolin.bmdp.datamodel.bediagram.LongType idBEType = new org.shaolin.bmdp.datamodel.bediagram.LongType();
    
        //MemberType Define for id
        member = new MemberType();
        member.setName("id");
        member.setDescription("null");
        member.setType(idBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.LongType partyIdBEType = new org.shaolin.bmdp.datamodel.bediagram.LongType();
    
        //MemberType Define for partyId
        member = new MemberType();
        member.setName("partyId");
        member.setDescription("null");
        member.setType(partyIdBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType partyTypeBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for partyType
        member = new MemberType();
        member.setName("partyType");
        member.setDescription("null");
        member.setType(partyTypeBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType sessionIdBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for sessionId
        member = new MemberType();
        member.setName("sessionId");
        member.setDescription("null");
        member.setType(sessionIdBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.JavaObjRefType flowStateBEType = new org.shaolin.bmdp.datamodel.bediagram.JavaObjRefType();
    
        TargetJavaType flowStateTargetJava = new TargetJavaType();
        flowStateTargetJava.setName("byte[]");
        flowStateTargetJava.setPackageName("null");
        flowStateBEType.setTargetJava(flowStateTargetJava);
            
        //MemberType Define for flowState
        member = new MemberType();
        member.setName("flowState");
        member.setDescription("null");
        member.setType(flowStateBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType subjectBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for subject
        member = new MemberType();
        member.setName("subject");
        member.setDescription("null");
        member.setType(subjectBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType descriptionBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for description
        member = new MemberType();
        member.setName("description");
        member.setDescription("null");
        member.setType(descriptionBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType commentsBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for comments
        member = new MemberType();
        member.setName("comments");
        member.setDescription("null");
        member.setType(commentsBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType createTimeBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for createTime
        member = new MemberType();
        member.setName("createTime");
        member.setDescription("null");
        member.setType(createTimeBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType expiredTimeBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for expiredTime
        member = new MemberType();
        member.setName("expiredTime");
        member.setDescription("null");
        member.setType(expiredTimeBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType expiredTimeStartBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for expiredTimeStart
        member = new MemberType();
        member.setName("expiredTimeStart");
        member.setDescription("null");
        member.setType(expiredTimeStartBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType expiredTimeEndBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for expiredTimeEnd
        member = new MemberType();
        member.setName("expiredTimeEnd");
        member.setDescription("null");
        member.setType(expiredTimeEndBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.BooleanType sendSMSBEType = new org.shaolin.bmdp.datamodel.bediagram.BooleanType();
    
        //MemberType Define for sendSMS
        member = new MemberType();
        member.setName("sendSMS");
        member.setDescription("null");
        member.setType(sendSMSBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.BooleanType sendEmailBEType = new org.shaolin.bmdp.datamodel.bediagram.BooleanType();
    
        //MemberType Define for sendEmail
        member = new MemberType();
        member.setName("sendEmail");
        member.setDescription("null");
        member.setType(sendEmailBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.JavaObjRefType periodicJobBEType = new org.shaolin.bmdp.datamodel.bediagram.JavaObjRefType();
    
        TargetJavaType periodicJobTargetJava = new TargetJavaType();
        periodicJobTargetJava.setName("java.lang.Runnable");
        periodicJobTargetJava.setPackageName("null");
        periodicJobBEType.setTargetJava(periodicJobTargetJava);
            
        //MemberType Define for periodicJob
        member = new MemberType();
        member.setName("periodicJob");
        member.setDescription("null");
        member.setType(periodicJobBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.LongType periodicValueBEType = new org.shaolin.bmdp.datamodel.bediagram.LongType();
    
        //MemberType Define for periodicValue
        member = new MemberType();
        member.setName("periodicValue");
        member.setDescription("null");
        member.setType(periodicValueBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.CEObjRefType periodicTypeBEType = new org.shaolin.bmdp.datamodel.bediagram.CEObjRefType();
    
        TargetEntityType periodicTypeTargetEntity = new TargetEntityType();
        periodicTypeBEType.setTargetEntity(periodicTypeTargetEntity);
        periodicTypeTargetEntity.setEntityName("org.shaolin.bmdp.workflow.ce.PeriodicType");
            
        //MemberType Define for periodicType
        member = new MemberType();
        member.setName("periodicType");
        member.setDescription("null");
        member.setType(periodicTypeBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.CEObjRefType statusBEType = new org.shaolin.bmdp.datamodel.bediagram.CEObjRefType();
    
        TargetEntityType statusTargetEntity = new TargetEntityType();
        statusBEType.setTargetEntity(statusTargetEntity);
        statusTargetEntity.setEntityName("org.shaolin.bmdp.workflow.ce.TaskStatusType");
            
        //MemberType Define for status
        member = new MemberType();
        member.setName("status");
        member.setDescription("null");
        member.setType(statusBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.IntType completeRateBEType = new org.shaolin.bmdp.datamodel.bediagram.IntType();
    
        //MemberType Define for completeRate
        member = new MemberType();
        member.setName("completeRate");
        member.setDescription("null");
        member.setType(completeRateBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.CEObjRefType priorityBEType = new org.shaolin.bmdp.datamodel.bediagram.CEObjRefType();
    
        TargetEntityType priorityTargetEntity = new TargetEntityType();
        priorityBEType.setTargetEntity(priorityTargetEntity);
        priorityTargetEntity.setEntityName("org.shaolin.bmdp.workflow.ce.TaskPriorityType");
            
        //MemberType Define for priority
        member = new MemberType();
        member.setName("priority");
        member.setDescription("null");
        member.setType(priorityBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.JavaObjRefType listenerBEType = new org.shaolin.bmdp.datamodel.bediagram.JavaObjRefType();
    
        TargetJavaType listenerTargetJava = new TargetJavaType();
        listenerTargetJava.setName("java.lang.Object");
        listenerTargetJava.setPackageName("null");
        listenerBEType.setTargetJava(listenerTargetJava);
            
        //MemberType Define for listener
        member = new MemberType();
        member.setName("listener");
        member.setDescription("null");
        member.setType(listenerBEType);
        memberTypeList.add(member);
            
        return memberTypeList;
    }
    
    public ITask createEntity ()
    {
        return new TaskImpl();
    }
    
}

        

